import fp
import time
import sql
import sqlop

typedef Tnode_info = Tnode_info{uid:string, name:string, unschedulable:bool, out_of_disk:bool, memory_pressure:bool, disk_pressure:bool, pid_pressure:bool, ready:bool, network_unavailable:bool}
typedef Tpod_info = Tpod_info{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint}
typedef Ttimer_t = Ttimer_t{tick_id:signed<64>, tick:bigint}
typedef Tnode_resources = Tnode_resources{uid:string, resource:string, allocatable:bigint}
typedef Tpod_resource_demands = Tpod_resource_demands{uid:string, resource:string, demand:bigint}
typedef Tmatch_expressions = Tmatch_expressions{expr_id:bigint, label_key:string, label_operator:string, label_values:Vec<string>}
typedef Tpod_topology_spread_constraints = Tpod_topology_spread_constraints{uid:string, max_skew:signed<64>, when_unsatisfiable:string, topology_key:string, match_expressions:Vec<bigint>}
typedef Tpod_ports_request = Tpod_ports_request{pod_uid:string, host_ip:string, host_port:signed<64>, host_protocol:string}
typedef Tpod_node_selector_labels = Tpod_node_selector_labels{pod_uid:string, term:signed<64>, match_expressions:Vec<bigint>}
typedef Tpod_affinity_match_expressions = Tpod_affinity_match_expressions{pod_uid:string, label_selector:signed<64>, affinity_match_expressions:Vec<bigint>, topology_key:string}
typedef Tpod_anti_affinity_match_expressions = Tpod_anti_affinity_match_expressions{pod_uid:string, label_selector:signed<64>, anti_affinity_match_expressions:Vec<bigint>, topology_key:string}
typedef Tpod_labels = Tpod_labels{pod_uid:string, label_key:string, label_value:string}
typedef Tnode_labels = Tnode_labels{node_name:string, label_key:string, label_value:string}
typedef Tvolume_labels = Tvolume_labels{volume_name:string, pod_uid:string, label_key:string, label_value:string}
typedef Tpod_by_service = Tpod_by_service{pod_uid:string, service_name:string}
typedef Tservice_affinity_labels = Tservice_affinity_labels{label_key:string}
typedef Tlabels_to_check_for_presence = Tlabels_to_check_for_presence{label_key:string, present:bool}
typedef Tnode_taints = Tnode_taints{node_name:string, taint_key:string, taint_value:Option<string>, taint_effect:string}
typedef Tpod_tolerations = Tpod_tolerations{pod_uid:string, tolerations_key:Option<string>, tolerations_value:Option<string>, tolerations_effect:Option<string>, tolerations_operator:Option<string>}
typedef Tnode_images = Tnode_images{node_name:string, image_name:string, image_size:bigint}
typedef Tpod_images = Tpod_images{pod_uid:string, image_name:string}
typedef Tpdb_match_expressions = Tpdb_match_expressions{pdb_name:string, min_available:signed<64>, max_unavailable:signed<64>, allowed_disruptions:signed<64>}
typedef TRtmp21 = TRtmp21{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>}
typedef Ttmp = Ttmp{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, tick_id:signed<64>, tick:bigint}
typedef Ttmp27 = Ttmp27{expr_id:bigint, label_key:string, label_operator:string, label_values:Vec<string>, node_name:string, label_key0:string, label_value:string}
typedef TRtmp28 = TRtmp28{expr_id:bigint, node_name:string}
typedef Tagg = Tagg{col:bool}
typedef Ttmp29 = Ttmp29{expr_id:bigint, label_key:string, label_operator:string, label_values:Vec<string>, pod_uid:string, label_key0:string, label_value:string}
typedef TRtmp30 = TRtmp30{expr_id:bigint, label_operator:string, pod_uid:string}
typedef Ttmp32 = Ttmp32{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, host_ip:string, host_port:signed<64>, host_protocol:string}
typedef Ttmp33 = Ttmp33{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, host_ip:string, host_port:signed<64>, host_protocol:string, pod_uid0:string, host_ip0:string, host_port0:signed<64>, host_protocol0:string}
typedef Ttmp34 = Ttmp34{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, host_ip:string, host_port:signed<64>, host_protocol:string, pod_uid0:string, host_ip0:string, host_port0:signed<64>, host_protocol0:string, uid0:string, pod_name0:string, status0:string, node_name0:Option<string>, namespace0:string, owner_name0:string, creation_timestamp0:string, priority0:signed<64>, scheduler_name0:Option<string>, has_node_selector_labels0:bool, has_pod_affinity_requirements0:bool, has_pod_anti_affinity_requirements0:bool, has_node_port_requirements0:bool, has_topology_spread_constraints0:bool, equivalence_class0:bigint, qos_class0:string, resourceversion0:bigint, last_requeue0:bigint, controllable__node_name0:Option<string>}
typedef TRtmp35 = TRtmp35{tmp:string, tmp7:Option<string>, gb:string, gb6:string, pod_uid:string}
typedef TRtmp36 = TRtmp36{gb:string, array_agg:Vec<string>}
typedef Tagg37 = Tagg37{array_agg:Vec<string>}
typedef TRtmp39 = TRtmp39{gb6:string, array_agg8:Vec<Option<string>>}
typedef Tagg40 = Tagg40{array_agg8:Vec<Option<string>>}
typedef Ttmp41 = Ttmp41{tmp:string, tmp7:Option<string>, gb:string, gb6:string, pod_uid:string, array_agg:Vec<string>}
typedef Ttmp42 = Ttmp42{tmp:string, tmp7:Option<string>, gb:string, gb6:string, pod_uid:string, array_agg:Vec<string>, array_agg8:Vec<Option<string>>}
typedef TRtmp43 = TRtmp43{pod_uid:string, pod_matches:Vec<string>, node_matches:Vec<Option<string>>}
typedef Ttmp44 = Ttmp44{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, host_ip:string, host_port:signed<64>, host_protocol:string, pod_uid0:string, host_ip0:string, host_port0:signed<64>, host_protocol0:string, uid0:string, pod_name0:string, status0:string, node_name0:Option<string>, namespace0:string, owner_name0:string, creation_timestamp0:string, priority0:signed<64>, scheduler_name0:Option<string>, has_node_selector_labels0:bool, has_pod_affinity_requirements0:bool, has_pod_anti_affinity_requirements0:bool, has_node_port_requirements0:bool, has_topology_spread_constraints0:bool, equivalence_class0:bigint, qos_class0:string, resourceversion0:bigint, last_requeue0:bigint}
typedef Ttmp54 = Ttmp54{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, term:signed<64>, match_expressions:Vec<bigint>}
typedef Ttmp55 = Ttmp55{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, term:signed<64>, match_expressions:Vec<bigint>, expr_id:bigint, node_name0:string}
typedef TRtmp57 = TRtmp57{tmp:string, gb7:string, pod_uid:string}
typedef TRtmp60 = TRtmp60{gb7:string, array_agg:Vec<string>}
typedef Ttmp62 = Ttmp62{tmp:string, gb7:string, pod_uid:string, array_agg:Vec<string>}
typedef TRtmp63 = TRtmp63{pod_uid:string, node_matches:Vec<string>}
typedef Ttmp64 = Ttmp64{uid:string, name:string, unschedulable:bool, out_of_disk:bool, memory_pressure:bool, disk_pressure:bool, pid_pressure:bool, ready:bool, network_unavailable:bool, uid0:string, resource:string, allocatable:bigint}
typedef Ttmp65 = Ttmp65{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, uid0:string, resource:string, demand:bigint}
typedef TRtmp66 = TRtmp66{node_name:Option<string>, resource:string, total_demand:bigint}
typedef Ttmp68 = Ttmp68{uid:string, name:string, unschedulable:bool, out_of_disk:bool, memory_pressure:bool, disk_pressure:bool, pid_pressure:bool, ready:bool, network_unavailable:bool, uid0:string, resource:string, allocatable:bigint, node_name:Option<string>, resource0:string, total_demand:bigint}
typedef TRtmp69 = TRtmp69{name:string, resource:string, capacity:bigint}
typedef Tagg70 = Tagg70{capacity:bigint}
typedef Ttmp71 = Ttmp71{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, tolerations_key:Option<string>, tolerations_value:Option<string>, tolerations_effect:Option<string>, tolerations_operator:Option<string>}
typedef TRtmp73 = TRtmp73{gb:string, node_name:string, taint_key:string, taint_value:Option<string>, taint_effect:string}
typedef TRtmp75 = TRtmp75{gb:string, count:signed<64>}
typedef Tagg76 = Tagg76{count:signed<64>}
typedef Ttmp77 = Ttmp77{gb:string, node_name:string, taint_key:string, taint_value:Option<string>, taint_effect:string, count:signed<64>}
typedef TRtmp78 = TRtmp78{node_name:string, taint_key:string, taint_value:Option<string>, taint_effect:string, num_taints:signed<64>}
typedef Ttmp80 = Ttmp80{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, tolerations_key:Option<string>, tolerations_value:Option<string>, tolerations_effect:Option<string>, tolerations_operator:Option<string>, node_name0:string, taint_key:string, taint_value:Option<string>, taint_effect:string, num_taints:signed<64>}
typedef TRtmp81 = TRtmp81{pod_uid:string, node_name:string}
typedef TRtmp83 = TRtmp83{node_name:string}
typedef TRtmp84 = TRtmp84{name:string}
typedef Ttmp85 = Ttmp85{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, label_selector:signed<64>, affinity_match_expressions:Vec<bigint>, topology_key:string}
typedef Ttmp86 = Ttmp86{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, label_selector:signed<64>, affinity_match_expressions:Vec<bigint>, topology_key:string, expr_id:bigint, label_operator:string, pod_uid0:string}
typedef Ttmp87 = Ttmp87{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, label_selector:signed<64>, affinity_match_expressions:Vec<bigint>, topology_key:string, expr_id:bigint, label_operator:string, pod_uid0:string, uid0:string, pod_name0:string, status0:string, node_name0:Option<string>, namespace0:string, owner_name0:string, creation_timestamp0:string, priority0:signed<64>, scheduler_name0:Option<string>, has_node_selector_labels0:bool, has_pod_affinity_requirements0:bool, has_pod_anti_affinity_requirements0:bool, has_node_port_requirements0:bool, has_topology_spread_constraints0:bool, equivalence_class0:bigint, qos_class0:string, resourceversion0:bigint, last_requeue0:bigint, controllable__node_name0:Option<string>}
typedef TRtmp89 = TRtmp89{tmp:string, tmp13:Option<string>, gb11:string, gb12:string, pod_uid:string}
typedef TRtmp92 = TRtmp92{gb11:string, array_agg:Vec<string>}
typedef TRtmp95 = TRtmp95{gb12:string, array_agg14:Vec<Option<string>>}
typedef Tagg96 = Tagg96{array_agg14:Vec<Option<string>>}
typedef Ttmp97 = Ttmp97{tmp:string, tmp13:Option<string>, gb11:string, gb12:string, pod_uid:string, array_agg:Vec<string>}
typedef Ttmp98 = Ttmp98{tmp:string, tmp13:Option<string>, gb11:string, gb12:string, pod_uid:string, array_agg:Vec<string>, array_agg14:Vec<Option<string>>}
typedef Ttmp100 = Ttmp100{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, label_selector:signed<64>, affinity_match_expressions:Vec<bigint>, topology_key:string, expr_id:bigint, label_operator:string, pod_uid0:string, uid0:string, pod_name0:string, status0:string, node_name0:Option<string>, namespace0:string, owner_name0:string, creation_timestamp0:string, priority0:signed<64>, scheduler_name0:Option<string>, has_node_selector_labels0:bool, has_pod_affinity_requirements0:bool, has_pod_anti_affinity_requirements0:bool, has_node_port_requirements0:bool, has_topology_spread_constraints0:bool, equivalence_class0:bigint, qos_class0:string, resourceversion0:bigint, last_requeue0:bigint}
typedef Ttmp111 = Ttmp111{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, label_selector:signed<64>, anti_affinity_match_expressions:Vec<bigint>, topology_key:string}
typedef Ttmp112 = Ttmp112{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, label_selector:signed<64>, anti_affinity_match_expressions:Vec<bigint>, topology_key:string, expr_id:bigint, label_operator:string, pod_uid0:string}
typedef Ttmp113 = Ttmp113{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, label_selector:signed<64>, anti_affinity_match_expressions:Vec<bigint>, topology_key:string, expr_id:bigint, label_operator:string, pod_uid0:string, uid0:string, pod_name0:string, status0:string, node_name0:Option<string>, namespace0:string, owner_name0:string, creation_timestamp0:string, priority0:signed<64>, scheduler_name0:Option<string>, has_node_selector_labels0:bool, has_pod_affinity_requirements0:bool, has_pod_anti_affinity_requirements0:bool, has_node_port_requirements0:bool, has_topology_spread_constraints0:bool, equivalence_class0:bigint, qos_class0:string, resourceversion0:bigint, last_requeue0:bigint, controllable__node_name0:Option<string>}
typedef Ttmp124 = Ttmp124{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, controllable__node_name:Option<string>, pod_uid:string, label_selector:signed<64>, anti_affinity_match_expressions:Vec<bigint>, topology_key:string, expr_id:bigint, label_operator:string, pod_uid0:string, uid0:string, pod_name0:string, status0:string, node_name0:Option<string>, namespace0:string, owner_name0:string, creation_timestamp0:string, priority0:signed<64>, scheduler_name0:Option<string>, has_node_selector_labels0:bool, has_pod_affinity_requirements0:bool, has_pod_anti_affinity_requirements0:bool, has_node_port_requirements0:bool, has_topology_spread_constraints0:bool, equivalence_class0:bigint, qos_class0:string, resourceversion0:bigint, last_requeue0:bigint}
typedef TRtmp135 = TRtmp135{col0:signed<64>}
typedef TRtmp137 = TRtmp137{node_name:Option<string>, m:signed<64>}
typedef Tagg138 = Tagg138{m:signed<64>}
typedef Ttmp141 = Ttmp141{uid:string, pod_name:string, status:string, node_name:Option<string>, namespace:string, owner_name:string, creation_timestamp:string, priority:signed<64>, scheduler_name:Option<string>, has_node_selector_labels:bool, has_pod_affinity_requirements:bool, has_pod_anti_affinity_requirements:bool, has_node_port_requirements:bool, has_topology_spread_constraints:bool, equivalence_class:bigint, qos_class:string, resourceversion:bigint, last_requeue:bigint, node_name0:Option<string>, m:signed<64>}
typedef Ttmp244 = Ttmp244{name:string, resource:string, capacity:bigint, pod_uid:string, pod_matches:Vec<string>, node_matches:Vec<Option<string>>}
typedef Ttmp247 = Ttmp247{name:string, resource:string, capacity:bigint, pod_uid:string, node_matches:Vec<string>}
typedef Ttmp251 = Ttmp251{name:string, resource:string, capacity:bigint, name0:string}
function agg(g: Group<(string, bigint, string, string, string, Vec<string>, string), (Tmatch_expressions, Tnode_labels)>):Tagg {
(var gb, var gb2, var gb3, var gb4, var gb5, var gb6, var gb7) = group_key(g);
(for ((i, _) in g) {
var v = i.0;
(var v0 = i.1)}
);
(Tagg{.col = if ((gb3 == "NotIn")) {
((not vec_contains(vec_push_imm(vec_empty(), gb), gb5)) and sql_array_contains(gb6, gb7))} else {
if ((gb3 == "DoesNotExist")) {
(not vec_contains(vec_push_imm(vec_empty(), gb), gb5))} else {
(64'sd1 == 64'sd1)}}})
}

function agg31(g: Group<(bigint, string, string, string, string, Vec<string>, string), (Tmatch_expressions, Tpod_labels)>):Tagg {
(var gb, var gb2, var gb3, var gb4, var gb5, var gb6, var gb7) = group_key(g);
(for ((i, _) in g) {
var v = i.0;
(var v0 = i.1)}
);
(Tagg{.col = if ((gb2 == "NotIn")) {
((not vec_contains(vec_push_imm(vec_empty(), gb4), gb5)) and sql_array_contains(gb6, gb7))} else {
if ((gb2 == "DoesNotExist")) {
(not vec_contains(vec_push_imm(vec_empty(), gb4), gb5))} else {
(64'sd1 == 64'sd1)}}})
}

function agg37(g: Group<string, TRtmp35>):Tagg37 {
(var gb19) = group_key(g);
(var array_agg20 = vec_empty(): Vec<string>);
(for ((i, _) in g) {
var v18 = i;
(var incr = v18.tmp);
(vec_push(array_agg20, incr))}
);
(Tagg37{.array_agg = array_agg20})
}

function agg40(g25: Group<string, TRtmp35>):Tagg40 {
(var gb24) = group_key(g25);
(var array_agg28 = vec_empty(): Vec<Option<string>>);
(for ((i26, _) in g25) {
var v23 = i26;
(var incr27 = v23.tmp7);
(vec_push(array_agg28, incr27))}
);
(Tagg40{.array_agg8 = array_agg28})
}

function agg49(g: Group<string, TRtmp35>):Tagg37 {
(var gb19) = group_key(g);
(var array_agg20 = vec_empty(): Vec<string>);
(for ((i, _) in g) {
var v18 = i;
(var incr = v18.tmp);
(vec_push(array_agg20, incr))}
);
(Tagg37{.array_agg = array_agg20})
}

function agg52(g25: Group<string, TRtmp35>):Tagg40 {
(var gb24) = group_key(g25);
(var array_agg28 = vec_empty(): Vec<Option<string>>);
(for ((i26, _) in g25) {
var v23 = i26;
(var incr27 = v23.tmp7);
(vec_push(array_agg28, incr27))}
);
(Tagg40{.array_agg8 = array_agg28})
}

function agg58(g: Group<(string, Vec<bigint>, signed<64>, string), (TRtmp21, Tpod_node_selector_labels, TRtmp28)>):Tagg {
(var gb13, var gb14, var gb15, var gb16) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v8 = i.0;
(var v9 = i.1);
(var v11 = i.2);
(var incr = v11.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb14) == set_size(count_distinct) as signed<64>)})
}

function agg61(g21: Group<string, TRtmp57>):Tagg37 {
(var gb20) = group_key(g21);
(var array_agg24 = vec_empty(): Vec<string>);
(for ((i22, _) in g21) {
var v19 = i22;
(var incr23 = v19.tmp);
(vec_push(array_agg24, incr23))}
);
(Tagg37{.array_agg = array_agg24})
}

function agg70(g: Group<(string, string, bigint), (Tnode_info, Tnode_resources, TRtmp66)>):Tagg70 {
(var gb, var gb8, var gb9) = group_key(g);
(var sum = 0: bigint);
(for ((i, _) in g) {
var v = i.0;
(var v0 = i.1);
(var v6 = i.2);
(var incr = v6.total_demand);
(sum = agg_sum_int_R(sum, incr))}
);
(Tagg70{.capacity = (gb9 - sum as bigint)})
}

function agg76(g: Group<string, TRtmp73>):Tagg76 {
(var gb7) = group_key(g);
(var count8 = 64'sd0: signed<64>);
(for ((i, _) in g) {
var v6 = i;
(count8 = agg_count_R(count8, 64'sd1))}
);
(Tagg76{.count = count8})
}

function agg82(g20: Group<(string, string, signed<64>), (TRtmp21, Tpod_tolerations, TRtmp78)>):Tagg {
(var gb17, var gb18, var gb19) = group_key(g20);
(var count22 = 64'sd0: signed<64>);
(for ((i21, _) in g20) {
var v = i21.0;
(var v0 = i21.1);
(var v15 = i21.2);
(count22 = agg_count_R(count22, 64'sd1))}
);
(Tagg{.col = (count22 == gb19)})
}

function agg90(g: Group<(string, string, signed<64>, string, Vec<bigint>, Option<string>), (TRtmp21, Tpod_affinity_match_expressions, TRtmp30, TRtmp21)>):Tagg {
(var gb22, var gb23, var gb24, var gb25, var gb26, var gb27) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v15 = i.0;
(var v16 = i.1);
(var v18 = i.2);
(var v20 = i.3);
(var incr = v18.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb26) == set_size(count_distinct) as signed<64>)})
}

function agg93(g32: Group<string, TRtmp89>):Tagg37 {
(var gb31) = group_key(g32);
(var array_agg35 = vec_empty(): Vec<string>);
(for ((i33, _) in g32) {
var v30 = i33;
(var incr34 = v30.tmp);
(vec_push(array_agg35, incr34))}
);
(Tagg37{.array_agg = array_agg35})
}

function agg96(g42: Group<string, TRtmp89>):Tagg96 {
(var gb41) = group_key(g42);
(var array_agg45 = vec_empty(): Vec<Option<string>>);
(for ((i43, _) in g42) {
var v40 = i43;
(var incr44 = v40.tmp13);
(vec_push(array_agg45, incr44))}
);
(Tagg96{.array_agg14 = array_agg45})
}

function agg103(g: Group<(string, string, signed<64>, string, Vec<bigint>, Option<string>), (TRtmp21, Tpod_affinity_match_expressions, TRtmp30, Tpod_info)>):Tagg {
(var gb22, var gb23, var gb24, var gb25, var gb26, var gb27) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v15 = i.0;
(var v16 = i.1);
(var v18 = i.2);
(var v20 = i.3);
(var incr = v18.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb26) == set_size(count_distinct) as signed<64>)})
}

function agg106(g32: Group<string, TRtmp89>):Tagg37 {
(var gb31) = group_key(g32);
(var array_agg35 = vec_empty(): Vec<string>);
(for ((i33, _) in g32) {
var v30 = i33;
(var incr34 = v30.tmp);
(vec_push(array_agg35, incr34))}
);
(Tagg37{.array_agg = array_agg35})
}

function agg109(g42: Group<string, TRtmp89>):Tagg96 {
(var gb41) = group_key(g42);
(var array_agg45 = vec_empty(): Vec<Option<string>>);
(for ((i43, _) in g42) {
var v40 = i43;
(var incr44 = v40.tmp13);
(vec_push(array_agg45, incr44))}
);
(Tagg96{.array_agg14 = array_agg45})
}

function agg116(g: Group<(string, string, signed<64>, string, Vec<bigint>, Option<string>), (TRtmp21, Tpod_anti_affinity_match_expressions, TRtmp30, TRtmp21)>):Tagg {
(var gb22, var gb23, var gb24, var gb25, var gb26, var gb27) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v15 = i.0;
(var v16 = i.1);
(var v18 = i.2);
(var v20 = i.3);
(var incr = v18.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb26) == set_size(count_distinct) as signed<64>)})
}

function agg119(g32: Group<string, TRtmp89>):Tagg37 {
(var gb31) = group_key(g32);
(var array_agg35 = vec_empty(): Vec<string>);
(for ((i33, _) in g32) {
var v30 = i33;
(var incr34 = v30.tmp);
(vec_push(array_agg35, incr34))}
);
(Tagg37{.array_agg = array_agg35})
}

function agg122(g42: Group<string, TRtmp89>):Tagg96 {
(var gb41) = group_key(g42);
(var array_agg45 = vec_empty(): Vec<Option<string>>);
(for ((i43, _) in g42) {
var v40 = i43;
(var incr44 = v40.tmp13);
(vec_push(array_agg45, incr44))}
);
(Tagg96{.array_agg14 = array_agg45})
}

function agg127(g: Group<(string, string, signed<64>, string, Vec<bigint>, Option<string>), (TRtmp21, Tpod_anti_affinity_match_expressions, TRtmp30, Tpod_info)>):Tagg {
(var gb22, var gb23, var gb24, var gb25, var gb26, var gb27) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v15 = i.0;
(var v16 = i.1);
(var v18 = i.2);
(var v20 = i.3);
(var incr = v18.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb26) == set_size(count_distinct) as signed<64>)})
}

function agg130(g32: Group<string, TRtmp89>):Tagg37 {
(var gb31) = group_key(g32);
(var array_agg35 = vec_empty(): Vec<string>);
(for ((i33, _) in g32) {
var v30 = i33;
(var incr34 = v30.tmp);
(vec_push(array_agg35, incr34))}
);
(Tagg37{.array_agg = array_agg35})
}

function agg133(g42: Group<string, TRtmp89>):Tagg96 {
(var gb41) = group_key(g42);
(var array_agg45 = vec_empty(): Vec<Option<string>>);
(for ((i43, _) in g42) {
var v40 = i43;
(var incr44 = v40.tmp13);
(vec_push(array_agg45, incr44))}
);
(Tagg96{.array_agg14 = array_agg45})
}

function agg136(g: Group<(), TRtmp21>):TRtmp135 {
var count = 64'sd0: signed<64>;
(for ((i, _) in g) {
var v = i;
(count = agg_count_R(count, 64'sd1))}
);
(TRtmp135{.col0 = count})
}

function agg138(g: Group<Option<string>, TRtmp21>):Tagg138 {
(var gb) = group_key(g);
(var max = (true, 64'sd0): (bool, signed<64>));
(for ((i, _) in g) {
var v = i;
(var incr = v.priority);
(max = agg_max_R(max, incr))}
);
(Tagg138{.m = max.1})
}

function agg147(g: Group<(string, bigint, string, string, string, Vec<string>, string), (Tmatch_expressions, Tnode_labels)>):Tagg {
(var gb, var gb2, var gb3, var gb4, var gb5, var gb6, var gb7) = group_key(g);
(for ((i, _) in g) {
var v = i.0;
(var v0 = i.1)}
);
(Tagg{.col = if ((gb3 == "NotIn")) {
((not vec_contains(vec_push_imm(vec_empty(), gb), gb5)) and sql_array_contains(gb6, gb7))} else {
if ((gb3 == "DoesNotExist")) {
(not vec_contains(vec_push_imm(vec_empty(), gb), gb5))} else {
(64'sd1 == 64'sd1)}}})
}

function agg149(g: Group<(bigint, string, string, string, string, Vec<string>, string), (Tmatch_expressions, Tpod_labels)>):Tagg {
(var gb, var gb2, var gb3, var gb4, var gb5, var gb6, var gb7) = group_key(g);
(for ((i, _) in g) {
var v = i.0;
(var v0 = i.1)}
);
(Tagg{.col = if ((gb2 == "NotIn")) {
((not vec_contains(vec_push_imm(vec_empty(), gb4), gb5)) and sql_array_contains(gb6, gb7))} else {
if ((gb2 == "DoesNotExist")) {
(not vec_contains(vec_push_imm(vec_empty(), gb4), gb5))} else {
(64'sd1 == 64'sd1)}}})
}

function agg154(g: Group<string, TRtmp35>):Tagg37 {
(var gb19) = group_key(g);
(var array_agg20 = vec_empty(): Vec<string>);
(for ((i, _) in g) {
var v18 = i;
(var incr = v18.tmp);
(vec_push(array_agg20, incr))}
);
(Tagg37{.array_agg = array_agg20})
}

function agg157(g25: Group<string, TRtmp35>):Tagg40 {
(var gb24) = group_key(g25);
(var array_agg28 = vec_empty(): Vec<Option<string>>);
(for ((i26, _) in g25) {
var v23 = i26;
(var incr27 = v23.tmp7);
(vec_push(array_agg28, incr27))}
);
(Tagg40{.array_agg8 = array_agg28})
}

function agg163(g: Group<string, TRtmp35>):Tagg37 {
(var gb19) = group_key(g);
(var array_agg20 = vec_empty(): Vec<string>);
(for ((i, _) in g) {
var v18 = i;
(var incr = v18.tmp);
(vec_push(array_agg20, incr))}
);
(Tagg37{.array_agg = array_agg20})
}

function agg166(g25: Group<string, TRtmp35>):Tagg40 {
(var gb24) = group_key(g25);
(var array_agg28 = vec_empty(): Vec<Option<string>>);
(for ((i26, _) in g25) {
var v23 = i26;
(var incr27 = v23.tmp7);
(vec_push(array_agg28, incr27))}
);
(Tagg40{.array_agg8 = array_agg28})
}

function agg170(g: Group<(string, Vec<bigint>, signed<64>, string), (TRtmp21, Tpod_node_selector_labels, TRtmp28)>):Tagg {
(var gb13, var gb14, var gb15, var gb16) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v8 = i.0;
(var v9 = i.1);
(var v11 = i.2);
(var incr = v11.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb14) == set_size(count_distinct) as signed<64>)})
}

function agg173(g21: Group<string, TRtmp57>):Tagg37 {
(var gb20) = group_key(g21);
(var array_agg24 = vec_empty(): Vec<string>);
(for ((i22, _) in g21) {
var v19 = i22;
(var incr23 = v19.tmp);
(vec_push(array_agg24, incr23))}
);
(Tagg37{.array_agg = array_agg24})
}

function agg178(g: Group<(string, string, bigint), (Tnode_info, Tnode_resources, TRtmp66)>):Tagg70 {
(var gb, var gb8, var gb9) = group_key(g);
(var sum = 0: bigint);
(for ((i, _) in g) {
var v = i.0;
(var v0 = i.1);
(var v6 = i.2);
(var incr = v6.total_demand);
(sum = agg_sum_int_R(sum, incr))}
);
(Tagg70{.capacity = (gb9 - sum as bigint)})
}

function agg183(g: Group<string, TRtmp73>):Tagg76 {
(var gb7) = group_key(g);
(var count8 = 64'sd0: signed<64>);
(for ((i, _) in g) {
var v6 = i;
(count8 = agg_count_R(count8, 64'sd1))}
);
(Tagg76{.count = count8})
}

function agg187(g20: Group<(string, string, signed<64>), (TRtmp21, Tpod_tolerations, TRtmp78)>):Tagg {
(var gb17, var gb18, var gb19) = group_key(g20);
(var count22 = 64'sd0: signed<64>);
(for ((i21, _) in g20) {
var v = i21.0;
(var v0 = i21.1);
(var v15 = i21.2);
(count22 = agg_count_R(count22, 64'sd1))}
);
(Tagg{.col = (count22 == gb19)})
}

function agg192(g: Group<(string, string, signed<64>, string, Vec<bigint>, Option<string>), (TRtmp21, Tpod_affinity_match_expressions, TRtmp30, TRtmp21)>):Tagg {
(var gb22, var gb23, var gb24, var gb25, var gb26, var gb27) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v15 = i.0;
(var v16 = i.1);
(var v18 = i.2);
(var v20 = i.3);
(var incr = v18.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb26) == set_size(count_distinct) as signed<64>)})
}

function agg195(g32: Group<string, TRtmp89>):Tagg37 {
(var gb31) = group_key(g32);
(var array_agg35 = vec_empty(): Vec<string>);
(for ((i33, _) in g32) {
var v30 = i33;
(var incr34 = v30.tmp);
(vec_push(array_agg35, incr34))}
);
(Tagg37{.array_agg = array_agg35})
}

function agg198(g42: Group<string, TRtmp89>):Tagg96 {
(var gb41) = group_key(g42);
(var array_agg45 = vec_empty(): Vec<Option<string>>);
(for ((i43, _) in g42) {
var v40 = i43;
(var incr44 = v40.tmp13);
(vec_push(array_agg45, incr44))}
);
(Tagg96{.array_agg14 = array_agg45})
}

function agg202(g: Group<(string, string, signed<64>, string, Vec<bigint>, Option<string>), (TRtmp21, Tpod_affinity_match_expressions, TRtmp30, TRtmp21)>):Tagg {
(var gb22, var gb23, var gb24, var gb25, var gb26, var gb27) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v15 = i.0;
(var v16 = i.1);
(var v18 = i.2);
(var v20 = i.3);
(var incr = v18.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb26) == set_size(count_distinct) as signed<64>)})
}

function agg205(g32: Group<string, TRtmp89>):Tagg37 {
(var gb31) = group_key(g32);
(var array_agg35 = vec_empty(): Vec<string>);
(for ((i33, _) in g32) {
var v30 = i33;
(var incr34 = v30.tmp);
(vec_push(array_agg35, incr34))}
);
(Tagg37{.array_agg = array_agg35})
}

function agg208(g42: Group<string, TRtmp89>):Tagg96 {
(var gb41) = group_key(g42);
(var array_agg45 = vec_empty(): Vec<Option<string>>);
(for ((i43, _) in g42) {
var v40 = i43;
(var incr44 = v40.tmp13);
(vec_push(array_agg45, incr44))}
);
(Tagg96{.array_agg14 = array_agg45})
}

function agg212(g: Group<(string, string, signed<64>, string, Vec<bigint>, Option<string>), (TRtmp21, Tpod_anti_affinity_match_expressions, TRtmp30, TRtmp21)>):Tagg {
(var gb22, var gb23, var gb24, var gb25, var gb26, var gb27) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v15 = i.0;
(var v16 = i.1);
(var v18 = i.2);
(var v20 = i.3);
(var incr = v18.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb26) == set_size(count_distinct) as signed<64>)})
}

function agg215(g32: Group<string, TRtmp89>):Tagg37 {
(var gb31) = group_key(g32);
(var array_agg35 = vec_empty(): Vec<string>);
(for ((i33, _) in g32) {
var v30 = i33;
(var incr34 = v30.tmp);
(vec_push(array_agg35, incr34))}
);
(Tagg37{.array_agg = array_agg35})
}

function agg218(g42: Group<string, TRtmp89>):Tagg96 {
(var gb41) = group_key(g42);
(var array_agg45 = vec_empty(): Vec<Option<string>>);
(for ((i43, _) in g42) {
var v40 = i43;
(var incr44 = v40.tmp13);
(vec_push(array_agg45, incr44))}
);
(Tagg96{.array_agg14 = array_agg45})
}

function agg222(g: Group<(string, string, signed<64>, string, Vec<bigint>, Option<string>), (TRtmp21, Tpod_anti_affinity_match_expressions, TRtmp30, TRtmp21)>):Tagg {
(var gb22, var gb23, var gb24, var gb25, var gb26, var gb27) = group_key(g);
(var count_distinct = set_empty(): Set<bigint>);
(for ((i, _) in g) {
var v15 = i.0;
(var v16 = i.1);
(var v18 = i.2);
(var v20 = i.3);
(var incr = v18.expr_id);
(set_insert(count_distinct, incr))}
);
(Tagg{.col = (sql_array_length(gb26) == set_size(count_distinct) as signed<64>)})
}

function agg225(g32: Group<string, TRtmp89>):Tagg37 {
(var gb31) = group_key(g32);
(var array_agg35 = vec_empty(): Vec<string>);
(for ((i33, _) in g32) {
var v30 = i33;
(var incr34 = v30.tmp);
(vec_push(array_agg35, incr34))}
);
(Tagg37{.array_agg = array_agg35})
}

function agg228(g42: Group<string, TRtmp89>):Tagg96 {
(var gb41) = group_key(g42);
(var array_agg45 = vec_empty(): Vec<Option<string>>);
(for ((i43, _) in g42) {
var v40 = i43;
(var incr44 = v40.tmp13);
(vec_push(array_agg45, incr44))}
);
(Tagg96{.array_agg14 = array_agg45})
}

function agg231(g: Group<(), TRtmp21>):TRtmp135 {
var count = 64'sd0: signed<64>;
(for ((i, _) in g) {
var v = i;
(count = agg_count_R(count, 64'sd1))}
);
(TRtmp135{.col0 = count})
}

input relation Rnode_info[Tnode_info] primary key (row) (row.uid)
input relation Rpod_info[Tpod_info] primary key (row) (row.uid)
input relation Rtimer_t[Ttimer_t] primary key (row) (row.tick_id)
input relation Rnode_resources[Tnode_resources]
input relation Rpod_resource_demands[Tpod_resource_demands]
input relation Rmatch_expressions[Tmatch_expressions]
input relation Rpod_topology_spread_constraints[Tpod_topology_spread_constraints]
input relation Rpod_ports_request[Tpod_ports_request]
input relation Rpod_node_selector_labels[Tpod_node_selector_labels]
input relation Rpod_affinity_match_expressions[Tpod_affinity_match_expressions]
input relation Rpod_anti_affinity_match_expressions[Tpod_anti_affinity_match_expressions]
input relation Rpod_labels[Tpod_labels] primary key (row) (row.pod_uid)
input relation Rnode_labels[Tnode_labels]
input relation Rvolume_labels[Tvolume_labels]
input relation Rpod_by_service[Tpod_by_service]
input relation Rservice_affinity_labels[Tservice_affinity_labels]
input relation Rlabels_to_check_for_presence[Tlabels_to_check_for_presence]
input relation Rnode_taints[Tnode_taints]
input relation Rpod_tolerations[Tpod_tolerations]
input relation Rnode_images[Tnode_images]
input relation Rpod_images[Tpod_images]
input relation Rpdb_match_expressions[Tpdb_match_expressions]
output relation Rnode_info__view[Tnode_info]
output relation Rpod_info__view[Tpod_info]
output relation Rtimer_t__view[Ttimer_t]
output relation Rnode_resources__view[Tnode_resources]
output relation Rpod_resource_demands__view[Tpod_resource_demands]
output relation Rmatch_expressions__view[Tmatch_expressions]
output relation Rpod_topology_spread_constraints__view[Tpod_topology_spread_constraints]
output relation Rpod_ports_request__view[Tpod_ports_request]
output relation Rpod_node_selector_labels__view[Tpod_node_selector_labels]
output relation Rpod_affinity_match_expressions__view[Tpod_affinity_match_expressions]
output relation Rpod_anti_affinity_match_expressions__view[Tpod_anti_affinity_match_expressions]
output relation Rpod_labels__view[Tpod_labels]
output relation Rnode_labels__view[Tnode_labels]
output relation Rvolume_labels__view[Tvolume_labels]
output relation Rpod_by_service__view[Tpod_by_service]
output relation Rservice_affinity_labels__view[Tservice_affinity_labels]
output relation Rlabels_to_check_for_presence__view[Tlabels_to_check_for_presence]
output relation Rnode_taints__view[Tnode_taints]
output relation Rpod_tolerations__view[Tpod_tolerations]
output relation Rnode_images__view[Tnode_images]
output relation Rpod_images__view[Tpod_images]
output relation Rpdb_match_expressions__view[Tpdb_match_expressions]
relation Rtmp21[TRtmp21]
output relation Rpods_to_assign_no_limit_no_requeue[TRtmp21]
relation Rtmp22[TRtmp21]
output relation Rpods_to_assign_no_limit_with_requeue[TRtmp21]
relation Rtmp24[TRtmp21]
relation Runion[TRtmp21]
output relation Rpods_to_assign_no_limit[TRtmp21]
relation Rlimit[TRtmp21]
output relation Rpods_to_assign[TRtmp21]
output relation Rassigned_pods[Tpod_info]
relation Rtmp28[TRtmp28]
output relation Rmatching_nodes[TRtmp28]
relation Rtmp30[TRtmp30]
output relation Rmatching_pods[TRtmp30]
relation Rtmp35[TRtmp35]
relation Roverinput[TRtmp35]
relation Rtmp36[TRtmp36]
relation Rover[TRtmp36]
relation Rtmp39[TRtmp39]
relation Rover38[TRtmp39]
relation Rtmp43[TRtmp43]
output relation Rpods_with_port_requests_pending[TRtmp43]
relation Rtmp46[TRtmp35]
relation Roverinput45[TRtmp35]
relation Rtmp48[TRtmp36]
relation Rover47[TRtmp36]
relation Rtmp51[TRtmp39]
relation Rover50[TRtmp39]
relation Rtmp53[TRtmp43]
output relation Rpods_with_port_requests_scheduled[TRtmp43]
relation Rtmp57[TRtmp57]
relation Roverinput56[TRtmp57]
relation Rtmp60[TRtmp60]
relation Rover59[TRtmp60]
relation Rtmp63[TRtmp63]
output relation Rpod_node_selector_matches[TRtmp63]
relation Rtmp66[TRtmp66]
relation Rtmp67[TRtmp66]
relation Rtmp69[TRtmp69]
output relation Rspare_capacity_per_node[TRtmp69]
relation Rtmp73[TRtmp73]
relation Roverinput72[TRtmp73]
relation Rtmp75[TRtmp75]
relation Rover74[TRtmp75]
relation Rtmp78[TRtmp78]
relation Rtmp79[TRtmp78]
relation Rtmp81[TRtmp81]
output relation Rpods_that_tolerate_node_taints[TRtmp81]
relation Rtmp83[TRtmp83]
output relation Rnodes_that_have_tolerations[TRtmp83]
relation Rtmp84[TRtmp84]
output relation Rallowed_nodes[TRtmp84]
relation Rtmp89[TRtmp89]
relation Roverinput88[TRtmp89]
relation Rtmp92[TRtmp92]
relation Rover91[TRtmp92]
relation Rtmp95[TRtmp95]
relation Rover94[TRtmp95]
relation Rtmp99[TRtmp43]
output relation Rinter_pod_affinity_matches_pending[TRtmp43]
relation Rtmp102[TRtmp89]
relation Roverinput101[TRtmp89]
relation Rtmp105[TRtmp92]
relation Rover104[TRtmp92]
relation Rtmp108[TRtmp95]
relation Rover107[TRtmp95]
relation Rtmp110[TRtmp43]
output relation Rinter_pod_affinity_matches_scheduled[TRtmp43]
relation Rtmp115[TRtmp89]
relation Roverinput114[TRtmp89]
relation Rtmp118[TRtmp92]
relation Rover117[TRtmp92]
relation Rtmp121[TRtmp95]
relation Rover120[TRtmp95]
relation Rtmp123[TRtmp43]
output relation Rinter_pod_anti_affinity_matches_pending[TRtmp43]
relation Rtmp126[TRtmp89]
relation Roverinput125[TRtmp89]
relation Rtmp129[TRtmp92]
relation Rover128[TRtmp92]
relation Rtmp132[TRtmp95]
relation Rover131[TRtmp95]
relation Rtmp134[TRtmp43]
output relation Rinter_pod_anti_affinity_matches_scheduled[TRtmp43]
relation Rtmp135[TRtmp135]
output relation Rpods_to_assign_no_limit_count[TRtmp135]
relation Rtmp137[TRtmp137]
output relation Rhelper_view_preempt[TRtmp137]
relation Rtmp140[TRtmp21]
relation Rtmp142[TRtmp21]
relation Rtmp143[TRtmp21]
relation Runion144[TRtmp21]
output relation Rpods_to_assign_preempt[TRtmp21]
relation Rtmp145[TRtmp21]
output relation Rassigned_pods_preempt[TRtmp21]
relation Rtmp146[TRtmp28]
output relation Rmatching_nodes_preempt[TRtmp28]
relation Rtmp148[TRtmp30]
output relation Rmatching_pods_preempt[TRtmp30]
relation Rtmp151[TRtmp35]
relation Roverinput150[TRtmp35]
relation Rtmp153[TRtmp36]
relation Rover152[TRtmp36]
relation Rtmp156[TRtmp39]
relation Rover155[TRtmp39]
relation Rtmp158[TRtmp43]
output relation Rpods_with_port_requests_pending_preempt[TRtmp43]
relation Rtmp160[TRtmp35]
relation Roverinput159[TRtmp35]
relation Rtmp162[TRtmp36]
relation Rover161[TRtmp36]
relation Rtmp165[TRtmp39]
relation Rover164[TRtmp39]
relation Rtmp167[TRtmp43]
output relation Rpods_with_port_requests_scheduled_preempt[TRtmp43]
relation Rtmp169[TRtmp57]
relation Roverinput168[TRtmp57]
relation Rtmp172[TRtmp60]
relation Rover171[TRtmp60]
relation Rtmp174[TRtmp63]
output relation Rpod_node_selector_matches_preempt[TRtmp63]
relation Rtmp175[TRtmp66]
relation Rtmp176[TRtmp66]
relation Rtmp177[TRtmp69]
output relation Rspare_capacity_per_node_preempt[TRtmp69]
relation Rtmp180[TRtmp73]
relation Roverinput179[TRtmp73]
relation Rtmp182[TRtmp75]
relation Rover181[TRtmp75]
relation Rtmp184[TRtmp78]
relation Rtmp185[TRtmp78]
relation Rtmp186[TRtmp81]
output relation Rpods_that_tolerate_node_taints_preempt[TRtmp81]
relation Rtmp188[TRtmp83]
output relation Rnodes_that_have_tolerations_preempt[TRtmp83]
relation Rtmp189[TRtmp84]
output relation Rallowed_nodes_preempt[TRtmp84]
relation Rtmp191[TRtmp89]
relation Roverinput190[TRtmp89]
relation Rtmp194[TRtmp92]
relation Rover193[TRtmp92]
relation Rtmp197[TRtmp95]
relation Rover196[TRtmp95]
relation Rtmp199[TRtmp43]
output relation Rinter_pod_affinity_matches_pending_preempt[TRtmp43]
relation Rtmp201[TRtmp89]
relation Roverinput200[TRtmp89]
relation Rtmp204[TRtmp92]
relation Rover203[TRtmp92]
relation Rtmp207[TRtmp95]
relation Rover206[TRtmp95]
relation Rtmp209[TRtmp43]
output relation Rinter_pod_affinity_matches_scheduled_preempt[TRtmp43]
relation Rtmp211[TRtmp89]
relation Roverinput210[TRtmp89]
relation Rtmp214[TRtmp92]
relation Rover213[TRtmp92]
relation Rtmp217[TRtmp95]
relation Rover216[TRtmp95]
relation Rtmp219[TRtmp43]
output relation Rinter_pod_anti_affinity_matches_pending_preempt[TRtmp43]
relation Rtmp221[TRtmp89]
relation Roverinput220[TRtmp89]
relation Rtmp224[TRtmp92]
relation Rover223[TRtmp92]
relation Rtmp227[TRtmp95]
relation Rover226[TRtmp95]
relation Rtmp229[TRtmp43]
output relation Rinter_pod_anti_affinity_matches_scheduled_preempt[TRtmp43]
relation Rtmp230[TRtmp135]
output relation Rpods_to_assign_no_limit_count_preempt[TRtmp135]
relation Rtmp232[TRtmp84]
relation Rtmp233[TRtmp84]
relation Rtmp234[TRtmp84]
relation Rtmp235[TRtmp84]
relation Runion236[TRtmp84]
relation Rtmp237[TRtmp84]
relation Rtmp238[TRtmp84]
relation Runion239[TRtmp84]
relation Rtmp240[TRtmp84]
relation Rtmp241[TRtmp84]
relation Runion242[TRtmp84]
relation Rtmp243[TRtmp84]
output relation Rspare_capacity_per_node_sorted[TRtmp84]
relation Rtmp245[TRtmp69]
relation Rtmp246[TRtmp69]
relation Rtmp248[TRtmp69]
relation Rtmp249[TRtmp69]
relation Runion250[TRtmp69]
relation Rtmp252[TRtmp69]
relation Rtmp253[TRtmp69]
relation Runion254[TRtmp69]
relation Rtmp255[TRtmp69]
output relation Rspare_capacity_per_node_augment[TRtmp69]
Rnode_info__view[v0] :- Rnode_info[v],var v0 = v.
Rpod_info__view[v0] :- Rpod_info[v],var v0 = v.
Rtimer_t__view[v0] :- Rtimer_t[v],var v0 = v.
Rnode_resources__view[v0] :- Rnode_resources[v],var v0 = v.
Rpod_resource_demands__view[v0] :- Rpod_resource_demands[v],var v0 = v.
Rmatch_expressions__view[v0] :- Rmatch_expressions[v],var v0 = v.
Rpod_topology_spread_constraints__view[v0] :- Rpod_topology_spread_constraints[v],var v0 = v.
Rpod_ports_request__view[v0] :- Rpod_ports_request[v],var v0 = v.
Rpod_node_selector_labels__view[v0] :- Rpod_node_selector_labels[v],var v0 = v.
Rpod_affinity_match_expressions__view[v0] :- Rpod_affinity_match_expressions[v],var v0 = v.
Rpod_anti_affinity_match_expressions__view[v0] :- Rpod_anti_affinity_match_expressions[v],var v0 = v.
Rpod_labels__view[v0] :- Rpod_labels[v],var v0 = v.
Rnode_labels__view[v0] :- Rnode_labels[v],var v0 = v.
Rvolume_labels__view[v0] :- Rvolume_labels[v],var v0 = v.
Rpod_by_service__view[v0] :- Rpod_by_service[v],var v0 = v.
Rservice_affinity_labels__view[v0] :- Rservice_affinity_labels[v],var v0 = v.
Rlabels_to_check_for_presence__view[v0] :- Rlabels_to_check_for_presence[v],var v0 = v.
Rnode_taints__view[v0] :- Rnode_taints[v],var v0 = v.
Rpod_tolerations__view[v0] :- Rpod_tolerations[v],var v0 = v.
Rnode_images__view[v0] :- Rnode_images[v],var v0 = v.
Rpod_images__view[v0] :- Rpod_images[v],var v0 = v.
Rpdb_match_expressions__view[v0] :- Rpdb_match_expressions[v],var v0 = v.
Rpods_to_assign_no_limit_no_requeue[v1] :- Rpod_info[v],unwrapBool(b_and_RN((((v.last_requeue == 64'sd0 as bigint) and (v.status == "Pending")) and is_null(v.node_name)), s_eq_NR(v.scheduler_name, "dcm-scheduler"))),var v0 = TRtmp21{.uid = v.uid,.pod_name = v.pod_name,.status = v.status,.node_name = v.node_name,.namespace = v.namespace,.owner_name = v.owner_name,.creation_timestamp = v.creation_timestamp,.priority = v.priority,.scheduler_name = v.scheduler_name,.has_node_selector_labels = v.has_node_selector_labels,.has_pod_affinity_requirements = v.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v.has_pod_anti_affinity_requirements,.has_node_port_requirements = v.has_node_port_requirements,.has_topology_spread_constraints = v.has_topology_spread_constraints,.equivalence_class = v.equivalence_class,.qos_class = v.qos_class,.resourceversion = v.resourceversion,.last_requeue = v.last_requeue,.controllable__node_name = v.node_name},var v1 = v0.
Rpods_to_assign_no_limit_with_requeue[v1] :- Rpod_info[v],unwrapBool(b_and_RN((((v.last_requeue != 64'sd0 as bigint) and (v.status == "Pending")) and is_null(v.node_name)), s_eq_NR(v.scheduler_name, "dcm-scheduler"))),var v0 = TRtmp21{.uid = v.uid,.pod_name = v.pod_name,.status = v.status,.node_name = v.node_name,.namespace = v.namespace,.owner_name = v.owner_name,.creation_timestamp = v.creation_timestamp,.priority = v.priority,.scheduler_name = v.scheduler_name,.has_node_selector_labels = v.has_node_selector_labels,.has_pod_affinity_requirements = v.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v.has_pod_anti_affinity_requirements,.has_node_port_requirements = v.has_node_port_requirements,.has_topology_spread_constraints = v.has_topology_spread_constraints,.equivalence_class = v.equivalence_class,.qos_class = v.qos_class,.resourceversion = v.resourceversion,.last_requeue = v.last_requeue,.controllable__node_name = v.node_name},var v1 = v0.
Runion[v4] :- Rpods_to_assign_no_limit_no_requeue[v],var v4 = v.
Runion[v4] :- Rpods_to_assign_no_limit_with_requeue[v0],Rtimer_t[v1],(v0.last_requeue < v1.tick),true,var v2 = Ttmp{.uid = v0.uid,.pod_name = v0.pod_name,.status = v0.status,.node_name = v0.node_name,.namespace = v0.namespace,.owner_name = v0.owner_name,.creation_timestamp = v0.creation_timestamp,.priority = v0.priority,.scheduler_name = v0.scheduler_name,.has_node_selector_labels = v0.has_node_selector_labels,.has_pod_affinity_requirements = v0.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v0.has_pod_anti_affinity_requirements,.has_node_port_requirements = v0.has_node_port_requirements,.has_topology_spread_constraints = v0.has_topology_spread_constraints,.equivalence_class = v0.equivalence_class,.qos_class = v0.qos_class,.resourceversion = v0.resourceversion,.last_requeue = v0.last_requeue,.controllable__node_name = v0.controllable__node_name,.tick_id = v1.tick_id,.tick = v1.tick},var v3 = TRtmp21{.uid = v0.uid,.pod_name = v0.pod_name,.status = v0.status,.node_name = v0.node_name,.namespace = v0.namespace,.owner_name = v0.owner_name,.creation_timestamp = v0.creation_timestamp,.priority = v0.priority,.scheduler_name = v0.scheduler_name,.has_node_selector_labels = v0.has_node_selector_labels,.has_pod_affinity_requirements = v0.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v0.has_pod_anti_affinity_requirements,.has_node_port_requirements = v0.has_node_port_requirements,.has_topology_spread_constraints = v0.has_topology_spread_constraints,.equivalence_class = v0.equivalence_class,.qos_class = v0.qos_class,.resourceversion = v0.resourceversion,.last_requeue = v0.last_requeue,.controllable__node_name = v0.controllable__node_name},var v4 = v3.
Rpods_to_assign_no_limit[v5] :- Runion[v4],var v5 = v4.
Rlimit[v0] :- Rpods_to_assign_no_limit[v],var v0 = v.
Rpods_to_assign[v1] :- Rlimit[v0],var g = v0.group_by(()),var agg = limit(g, 50),var limited = FlatMap(agg),var v1 = limited.
Rassigned_pods[v0] :- Rpod_info[v],(not is_null(v.node_name)),var v0 = v.
Rmatching_nodes[v9] :- Rmatch_expressions[v],Rnode_labels[v0],((((((v.label_operator == "In") and (v.label_key == v0.label_key)) and sql_array_contains(v.label_values, v0.label_value)) or ((v.label_operator == "Exists") and (v.label_key == v0.label_key))) or (v.label_operator == "NotIn")) or (v.label_operator == "DoesNotExist")),true,var v1 = Ttmp27{.expr_id = v.expr_id,.label_key = v.label_key,.label_operator = v.label_operator,.label_values = v.label_values,.node_name = v0.node_name,.label_key0 = v0.label_key,.label_value = v0.label_value},var gb = v0.label_key,var gb2 = v.expr_id,var gb3 = v.label_operator,var gb4 = v0.node_name,var gb5 = v.label_key,var gb6 = v.label_values,var gb7 = v0.label_value,var groupResult = (v, v0).group_by((gb, gb2, gb3, gb4, gb5, gb6, gb7)),var aggResult = agg(groupResult),var v8 = TRtmp28{.expr_id = gb2,.node_name = gb4},aggResult.col,var v9 = v8.
Rmatching_pods[v9] :- Rmatch_expressions[v],Rpod_labels[v0],((((((v.label_operator == "In") and (v.label_key == v0.label_key)) and sql_array_contains(v.label_values, v0.label_value)) or ((v.label_operator == "Exists") and (v.label_key == v0.label_key))) or (v.label_operator == "NotIn")) or (v.label_operator == "DoesNotExist")),true,var v1 = Ttmp29{.expr_id = v.expr_id,.label_key = v.label_key,.label_operator = v.label_operator,.label_values = v.label_values,.pod_uid = v0.pod_uid,.label_key0 = v0.label_key,.label_value = v0.label_value},var gb = v.expr_id,var gb2 = v.label_operator,var gb3 = v0.pod_uid,var gb4 = v.label_key,var gb5 = v0.label_key,var gb6 = v.label_values,var gb7 = v0.label_value,var groupResult = (v, v0).group_by((gb, gb2, gb3, gb4, gb5, gb6, gb7)),var aggResult = agg31(groupResult),var v8 = TRtmp30{.expr_id = gb,.label_operator = gb2,.pod_uid = gb3},aggResult.col,var v9 = v8.
Roverinput[v17] :- Rpods_to_assign[v9],Rpod_ports_request[v10],(v9.uid == v10.pod_uid),true,var v11 = Ttmp32{.uid = v9.uid,.pod_name = v9.pod_name,.status = v9.status,.node_name = v9.node_name,.namespace = v9.namespace,.owner_name = v9.owner_name,.creation_timestamp = v9.creation_timestamp,.priority = v9.priority,.scheduler_name = v9.scheduler_name,.has_node_selector_labels = v9.has_node_selector_labels,.has_pod_affinity_requirements = v9.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v9.has_pod_anti_affinity_requirements,.has_node_port_requirements = v9.has_node_port_requirements,.has_topology_spread_constraints = v9.has_topology_spread_constraints,.equivalence_class = v9.equivalence_class,.qos_class = v9.qos_class,.resourceversion = v9.resourceversion,.last_requeue = v9.last_requeue,.controllable__node_name = v9.controllable__node_name,.pod_uid = v10.pod_uid,.host_ip = v10.host_ip,.host_port = v10.host_port,.host_protocol = v10.host_protocol},Rpod_ports_request[v12],((((v9.uid != v12.pod_uid) and (v10.host_port == v12.host_port)) and (v10.host_protocol == v12.host_protocol)) and (((v10.host_ip == v12.host_ip) or (v10.host_ip == "0.0.0.0")) or (v12.host_ip == "0.0.0.0"))),true,var v13 = Ttmp33{.uid = v11.uid,.pod_name = v11.pod_name,.status = v11.status,.node_name = v11.node_name,.namespace = v11.namespace,.owner_name = v11.owner_name,.creation_timestamp = v11.creation_timestamp,.priority = v11.priority,.scheduler_name = v11.scheduler_name,.has_node_selector_labels = v11.has_node_selector_labels,.has_pod_affinity_requirements = v11.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v11.has_pod_anti_affinity_requirements,.has_node_port_requirements = v11.has_node_port_requirements,.has_topology_spread_constraints = v11.has_topology_spread_constraints,.equivalence_class = v11.equivalence_class,.qos_class = v11.qos_class,.resourceversion = v11.resourceversion,.last_requeue = v11.last_requeue,.controllable__node_name = v11.controllable__node_name,.pod_uid = v11.pod_uid,.host_ip = v11.host_ip,.host_port = v11.host_port,.host_protocol = v11.host_protocol,.pod_uid0 = v12.pod_uid,.host_ip0 = v12.host_ip,.host_port0 = v12.host_port,.host_protocol0 = v12.host_protocol},Rpods_to_assign[v14],(v14.uid == v12.pod_uid),true,var v15 = Ttmp34{.uid = v13.uid,.pod_name = v13.pod_name,.status = v13.status,.node_name = v13.node_name,.namespace = v13.namespace,.owner_name = v13.owner_name,.creation_timestamp = v13.creation_timestamp,.priority = v13.priority,.scheduler_name = v13.scheduler_name,.has_node_selector_labels = v13.has_node_selector_labels,.has_pod_affinity_requirements = v13.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v13.has_pod_anti_affinity_requirements,.has_node_port_requirements = v13.has_node_port_requirements,.has_topology_spread_constraints = v13.has_topology_spread_constraints,.equivalence_class = v13.equivalence_class,.qos_class = v13.qos_class,.resourceversion = v13.resourceversion,.last_requeue = v13.last_requeue,.controllable__node_name = v13.controllable__node_name,.pod_uid = v13.pod_uid,.host_ip = v13.host_ip,.host_port = v13.host_port,.host_protocol = v13.host_protocol,.pod_uid0 = v13.pod_uid0,.host_ip0 = v13.host_ip0,.host_port0 = v13.host_port0,.host_protocol0 = v13.host_protocol0,.uid0 = v14.uid,.pod_name0 = v14.pod_name,.status0 = v14.status,.node_name0 = v14.node_name,.namespace0 = v14.namespace,.owner_name0 = v14.owner_name,.creation_timestamp0 = v14.creation_timestamp,.priority0 = v14.priority,.scheduler_name0 = v14.scheduler_name,.has_node_selector_labels0 = v14.has_node_selector_labels,.has_pod_affinity_requirements0 = v14.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v14.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v14.has_node_port_requirements,.has_topology_spread_constraints0 = v14.has_topology_spread_constraints,.equivalence_class0 = v14.equivalence_class,.qos_class0 = v14.qos_class,.resourceversion0 = v14.resourceversion,.last_requeue0 = v14.last_requeue,.controllable__node_name0 = v14.controllable__node_name},var v16 = TRtmp35{.tmp = v14.uid,.tmp7 = v14.node_name,.gb = v9.uid,.gb6 = v9.uid,.pod_uid = v9.uid},var v17 = v16.
Rover[v22] :- Roverinput[v18],var gb19 = v18.gb,var groupResult = (v18).group_by((gb19)),var aggResult = agg37(groupResult),var v21 = TRtmp36{.gb = gb19,.array_agg = aggResult.array_agg},var v22 = v21.
Rover38[v32] :- Roverinput[v23],var gb24 = v23.gb6,var groupResult31 = (v23).group_by((gb24)),var aggResult30 = agg40(groupResult31),var v29 = TRtmp39{.gb6 = gb24,.array_agg8 = aggResult30.array_agg8},var v32 = v29.
Rpods_with_port_requests_pending[v39] :- Roverinput[v33],Rover[v34],(true and (v33.gb == v34.gb)),var v35 = Ttmp41{.tmp = v33.tmp,.tmp7 = v33.tmp7,.gb = v33.gb,.gb6 = v33.gb6,.pod_uid = v33.pod_uid,.array_agg = v34.array_agg},Rover38[v36],(true and (v35.gb6 == v36.gb6)),var v37 = Ttmp42{.tmp = v35.tmp,.tmp7 = v35.tmp7,.gb = v35.gb,.gb6 = v35.gb6,.pod_uid = v35.pod_uid,.array_agg = v35.array_agg,.array_agg8 = v36.array_agg8},var v38 = TRtmp43{.pod_uid = v33.pod_uid,.pod_matches = v34.array_agg,.node_matches = v36.array_agg8},var v39 = v38.
Roverinput45[v17] :- Rpods_to_assign[v9],Rpod_ports_request[v10],(v9.uid == v10.pod_uid),true,var v11 = Ttmp32{.uid = v9.uid,.pod_name = v9.pod_name,.status = v9.status,.node_name = v9.node_name,.namespace = v9.namespace,.owner_name = v9.owner_name,.creation_timestamp = v9.creation_timestamp,.priority = v9.priority,.scheduler_name = v9.scheduler_name,.has_node_selector_labels = v9.has_node_selector_labels,.has_pod_affinity_requirements = v9.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v9.has_pod_anti_affinity_requirements,.has_node_port_requirements = v9.has_node_port_requirements,.has_topology_spread_constraints = v9.has_topology_spread_constraints,.equivalence_class = v9.equivalence_class,.qos_class = v9.qos_class,.resourceversion = v9.resourceversion,.last_requeue = v9.last_requeue,.controllable__node_name = v9.controllable__node_name,.pod_uid = v10.pod_uid,.host_ip = v10.host_ip,.host_port = v10.host_port,.host_protocol = v10.host_protocol},Rpod_ports_request[v12],((((v9.uid != v12.pod_uid) and (v10.host_port == v12.host_port)) and (v10.host_protocol == v12.host_protocol)) and (((v10.host_ip == v12.host_ip) or (v10.host_ip == "0.0.0.0")) or (v12.host_ip == "0.0.0.0"))),true,var v13 = Ttmp33{.uid = v11.uid,.pod_name = v11.pod_name,.status = v11.status,.node_name = v11.node_name,.namespace = v11.namespace,.owner_name = v11.owner_name,.creation_timestamp = v11.creation_timestamp,.priority = v11.priority,.scheduler_name = v11.scheduler_name,.has_node_selector_labels = v11.has_node_selector_labels,.has_pod_affinity_requirements = v11.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v11.has_pod_anti_affinity_requirements,.has_node_port_requirements = v11.has_node_port_requirements,.has_topology_spread_constraints = v11.has_topology_spread_constraints,.equivalence_class = v11.equivalence_class,.qos_class = v11.qos_class,.resourceversion = v11.resourceversion,.last_requeue = v11.last_requeue,.controllable__node_name = v11.controllable__node_name,.pod_uid = v11.pod_uid,.host_ip = v11.host_ip,.host_port = v11.host_port,.host_protocol = v11.host_protocol,.pod_uid0 = v12.pod_uid,.host_ip0 = v12.host_ip,.host_port0 = v12.host_port,.host_protocol0 = v12.host_protocol},Rassigned_pods[v14],(v14.uid == v12.pod_uid),true,var v15 = Ttmp44{.uid = v13.uid,.pod_name = v13.pod_name,.status = v13.status,.node_name = v13.node_name,.namespace = v13.namespace,.owner_name = v13.owner_name,.creation_timestamp = v13.creation_timestamp,.priority = v13.priority,.scheduler_name = v13.scheduler_name,.has_node_selector_labels = v13.has_node_selector_labels,.has_pod_affinity_requirements = v13.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v13.has_pod_anti_affinity_requirements,.has_node_port_requirements = v13.has_node_port_requirements,.has_topology_spread_constraints = v13.has_topology_spread_constraints,.equivalence_class = v13.equivalence_class,.qos_class = v13.qos_class,.resourceversion = v13.resourceversion,.last_requeue = v13.last_requeue,.controllable__node_name = v13.controllable__node_name,.pod_uid = v13.pod_uid,.host_ip = v13.host_ip,.host_port = v13.host_port,.host_protocol = v13.host_protocol,.pod_uid0 = v13.pod_uid0,.host_ip0 = v13.host_ip0,.host_port0 = v13.host_port0,.host_protocol0 = v13.host_protocol0,.uid0 = v14.uid,.pod_name0 = v14.pod_name,.status0 = v14.status,.node_name0 = v14.node_name,.namespace0 = v14.namespace,.owner_name0 = v14.owner_name,.creation_timestamp0 = v14.creation_timestamp,.priority0 = v14.priority,.scheduler_name0 = v14.scheduler_name,.has_node_selector_labels0 = v14.has_node_selector_labels,.has_pod_affinity_requirements0 = v14.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v14.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v14.has_node_port_requirements,.has_topology_spread_constraints0 = v14.has_topology_spread_constraints,.equivalence_class0 = v14.equivalence_class,.qos_class0 = v14.qos_class,.resourceversion0 = v14.resourceversion,.last_requeue0 = v14.last_requeue},var v16 = TRtmp35{.tmp = v14.uid,.tmp7 = v14.node_name,.gb = v9.uid,.gb6 = v9.uid,.pod_uid = v9.uid},var v17 = v16.
Rover47[v22] :- Roverinput45[v18],var gb19 = v18.gb,var groupResult = (v18).group_by((gb19)),var aggResult = agg49(groupResult),var v21 = TRtmp36{.gb = gb19,.array_agg = aggResult.array_agg},var v22 = v21.
Rover50[v32] :- Roverinput45[v23],var gb24 = v23.gb6,var groupResult31 = (v23).group_by((gb24)),var aggResult30 = agg52(groupResult31),var v29 = TRtmp39{.gb6 = gb24,.array_agg8 = aggResult30.array_agg8},var v32 = v29.
Rpods_with_port_requests_scheduled[v39] :- Roverinput45[v33],Rover47[v34],(true and (v33.gb == v34.gb)),var v35 = Ttmp41{.tmp = v33.tmp,.tmp7 = v33.tmp7,.gb = v33.gb,.gb6 = v33.gb6,.pod_uid = v33.pod_uid,.array_agg = v34.array_agg},Rover50[v36],(true and (v35.gb6 == v36.gb6)),var v37 = Ttmp42{.tmp = v35.tmp,.tmp7 = v35.tmp7,.gb = v35.gb,.gb6 = v35.gb6,.pod_uid = v35.pod_uid,.array_agg = v35.array_agg,.array_agg8 = v36.array_agg8},var v38 = TRtmp43{.pod_uid = v33.pod_uid,.pod_matches = v34.array_agg,.node_matches = v36.array_agg8},var v39 = v38.
Roverinput56[v18] :- Rpods_to_assign[v8],Rpod_node_selector_labels[v9],(v8.uid == v9.pod_uid),true,var v10 = Ttmp54{.uid = v8.uid,.pod_name = v8.pod_name,.status = v8.status,.node_name = v8.node_name,.namespace = v8.namespace,.owner_name = v8.owner_name,.creation_timestamp = v8.creation_timestamp,.priority = v8.priority,.scheduler_name = v8.scheduler_name,.has_node_selector_labels = v8.has_node_selector_labels,.has_pod_affinity_requirements = v8.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v8.has_pod_anti_affinity_requirements,.has_node_port_requirements = v8.has_node_port_requirements,.has_topology_spread_constraints = v8.has_topology_spread_constraints,.equivalence_class = v8.equivalence_class,.qos_class = v8.qos_class,.resourceversion = v8.resourceversion,.last_requeue = v8.last_requeue,.controllable__node_name = v8.controllable__node_name,.pod_uid = v9.pod_uid,.term = v9.term,.match_expressions = v9.match_expressions},Rmatching_nodes[v11],sql_array_contains(v9.match_expressions, v11.expr_id),true,var v12 = Ttmp55{.uid = v10.uid,.pod_name = v10.pod_name,.status = v10.status,.node_name = v10.node_name,.namespace = v10.namespace,.owner_name = v10.owner_name,.creation_timestamp = v10.creation_timestamp,.priority = v10.priority,.scheduler_name = v10.scheduler_name,.has_node_selector_labels = v10.has_node_selector_labels,.has_pod_affinity_requirements = v10.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v10.has_pod_anti_affinity_requirements,.has_node_port_requirements = v10.has_node_port_requirements,.has_topology_spread_constraints = v10.has_topology_spread_constraints,.equivalence_class = v10.equivalence_class,.qos_class = v10.qos_class,.resourceversion = v10.resourceversion,.last_requeue = v10.last_requeue,.controllable__node_name = v10.controllable__node_name,.pod_uid = v10.pod_uid,.term = v10.term,.match_expressions = v10.match_expressions,.expr_id = v11.expr_id,.node_name0 = v11.node_name},(v8.has_node_selector_labels == true),var gb13 = v8.uid,var gb14 = v9.match_expressions,var gb15 = v9.term,var gb16 = v11.node_name,var groupResult = (v8, v9, v11).group_by((gb13, gb14, gb15, gb16)),var aggResult = agg58(groupResult),var v17 = TRtmp57{.gb7 = gb13,.pod_uid = gb13,.tmp = gb16},aggResult.col,var v18 = v17.
Rover59[v28] :- Roverinput56[v19],var gb20 = v19.gb7,var groupResult27 = (v19).group_by((gb20)),var aggResult26 = agg61(groupResult27),var v25 = TRtmp60{.gb7 = gb20,.array_agg = aggResult26.array_agg},var v28 = v25.
Rpod_node_selector_matches[v33] :- Roverinput56[v29],Rover59[v30],(true and (v29.gb7 == v30.gb7)),var v31 = Ttmp62{.tmp = v29.tmp,.gb7 = v29.gb7,.pod_uid = v29.pod_uid,.array_agg = v30.array_agg},var v32 = TRtmp63{.pod_uid = v29.pod_uid,.node_matches = v30.array_agg},var v33 = v32.
Rtmp67[v6] :- Rpod_info[v2],Rpod_resource_demands[Tpod_resource_demands{v2.uid, resource, demand}],
var v3 = Tpod_resource_demands{.uid = v2.uid, .resource = resource, .demand = demand},
true,var v4 = Ttmp65{.uid = v2.uid,.pod_name = v2.pod_name,.status = v2.status,.node_name = v2.node_name,.namespace = v2.namespace,.owner_name = v2.owner_name,.creation_timestamp = v2.creation_timestamp,.priority = v2.priority,.scheduler_name = v2.scheduler_name,.has_node_selector_labels = v2.has_node_selector_labels,.has_pod_affinity_requirements = v2.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v2.has_pod_anti_affinity_requirements,.has_node_port_requirements = v2.has_node_port_requirements,.has_topology_spread_constraints = v2.has_topology_spread_constraints,.equivalence_class = v2.equivalence_class,.qos_class = v2.qos_class,.resourceversion = v2.resourceversion,.last_requeue = v2.last_requeue,.uid0 = v3.uid,.resource = v3.resource,.demand = v3.demand},var v5 = TRtmp66{.node_name = v2.node_name,.resource = v3.resource,.total_demand = v3.demand},var v6 = v5.
Rspare_capacity_per_node[v11] :- Rnode_info[v],Rnode_resources[Tnode_resources{v.uid, resource, allocatable}],
var v0 = Tnode_resources{.uid = v.uid, .resource = resource, .allocatable = allocatable},
true,var v1 = Ttmp64{.uid = v.uid,.name = v.name,.unschedulable = v.unschedulable,.out_of_disk = v.out_of_disk,.memory_pressure = v.memory_pressure,.disk_pressure = v.disk_pressure,.pid_pressure = v.pid_pressure,.ready = v.ready,.network_unavailable = v.network_unavailable,.uid0 = v0.uid,.resource = v0.resource,.allocatable = v0.allocatable},
Rtmp67[TRtmp66{Some{v.name}, v0.resource, total_demand}],
var v6 = TRtmp66{.node_name = Some{v.name}, .resource = v0.resource, .total_demand = total_demand},
true,var v7 = Ttmp68{.uid = v1.uid,.name = v1.name,.unschedulable = v1.unschedulable,.out_of_disk = v1.out_of_disk,.memory_pressure = v1.memory_pressure,.disk_pressure = v1.disk_pressure,.pid_pressure = v1.pid_pressure,.ready = v1.ready,.network_unavailable = v1.network_unavailable,.uid0 = v1.uid0,.resource = v1.resource,.allocatable = v1.allocatable,.node_name = v6.node_name,.resource0 = v6.resource,.total_demand = v6.total_demand},(((((((v.unschedulable == false) and (v.memory_pressure == false)) and (v.out_of_disk == false)) and (v.disk_pressure == false)) and (v.pid_pressure == false)) and (v.network_unavailable == false)) and (v.ready == true)),var gb = v.name,var gb8 = v0.resource,var gb9 = v0.allocatable,var groupResult = (v, v0, v6).group_by((gb, gb8, gb9)),var aggResult = agg70(groupResult),var v10 = TRtmp69{.name = gb,.resource = gb8,.capacity = aggResult.capacity},var v11 = v10.
Roverinput72[v5] :- Rnode_taints[v3],var v4 = TRtmp73{.gb = v3.node_name,.node_name = v3.node_name,.taint_key = v3.taint_key,.taint_value = v3.taint_value,.taint_effect = v3.taint_effect},var v5 = v4.
Rover74[v10] :- Roverinput72[v6],var gb7 = v6.gb,var groupResult = (v6).group_by((gb7)),var aggResult = agg76(groupResult),var v9 = TRtmp75{.gb = gb7,.count = aggResult.count},var v10 = v9.
Rtmp79[v15] :- Roverinput72[v11],Rover74[v12],(true and (v11.gb == v12.gb)),var v13 = Ttmp77{.gb = v11.gb,.node_name = v11.node_name,.taint_key = v11.taint_key,.taint_value = v11.taint_value,.taint_effect = v11.taint_effect,.count = v12.count},var v14 = TRtmp78{.node_name = v11.node_name,.taint_key = v11.taint_key,.taint_value = v11.taint_value,.taint_effect = v11.taint_effect,.num_taints = v12.count},var v15 = v14.
Rpods_that_tolerate_node_taints[v26] :- Rpods_to_assign[v],Rpod_tolerations[v0],(v.uid == v0.pod_uid),true,var v1 = Ttmp71{.uid = v.uid,.pod_name = v.pod_name,.status = v.status,.node_name = v.node_name,.namespace = v.namespace,.owner_name = v.owner_name,.creation_timestamp = v.creation_timestamp,.priority = v.priority,.scheduler_name = v.scheduler_name,.has_node_selector_labels = v.has_node_selector_labels,.has_pod_affinity_requirements = v.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v.has_pod_anti_affinity_requirements,.has_node_port_requirements = v.has_node_port_requirements,.has_topology_spread_constraints = v.has_topology_spread_constraints,.equivalence_class = v.equivalence_class,.qos_class = v.qos_class,.resourceversion = v.resourceversion,.last_requeue = v.last_requeue,.controllable__node_name = v.controllable__node_name,.pod_uid = v0.pod_uid,.tolerations_key = v0.tolerations_key,.tolerations_value = v0.tolerations_value,.tolerations_effect = v0.tolerations_effect,.tolerations_operator = v0.tolerations_operator},Rtmp79[v15],unwrapBool(b_and_NN(b_and_NN(s_eq_NR(v0.tolerations_key, v15.taint_key), b_or_RN(is_null(v0.tolerations_effect), s_eq_NR(v0.tolerations_effect, v15.taint_effect))), b_or_NN(s_eq_NR(v0.tolerations_operator, "Exists"), s_eq_NN(v0.tolerations_value, v15.taint_value)))),true,var v16 = Ttmp80{.uid = v1.uid,.pod_name = v1.pod_name,.status = v1.status,.node_name = v1.node_name,.namespace = v1.namespace,.owner_name = v1.owner_name,.creation_timestamp = v1.creation_timestamp,.priority = v1.priority,.scheduler_name = v1.scheduler_name,.has_node_selector_labels = v1.has_node_selector_labels,.has_pod_affinity_requirements = v1.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v1.has_pod_anti_affinity_requirements,.has_node_port_requirements = v1.has_node_port_requirements,.has_topology_spread_constraints = v1.has_topology_spread_constraints,.equivalence_class = v1.equivalence_class,.qos_class = v1.qos_class,.resourceversion = v1.resourceversion,.last_requeue = v1.last_requeue,.controllable__node_name = v1.controllable__node_name,.pod_uid = v1.pod_uid,.tolerations_key = v1.tolerations_key,.tolerations_value = v1.tolerations_value,.tolerations_effect = v1.tolerations_effect,.tolerations_operator = v1.tolerations_operator,.node_name0 = v15.node_name,.taint_key = v15.taint_key,.taint_value = v15.taint_value,.taint_effect = v15.taint_effect,.num_taints = v15.num_taints},var gb17 = v0.pod_uid,var gb18 = v15.node_name,var gb19 = v15.num_taints,var groupResult25 = (v, v0, v15).group_by((gb17, gb18, gb19)),var aggResult24 = agg82(groupResult25),var v23 = TRtmp81{.pod_uid = gb17,.node_name = gb18},aggResult24.col,var v26 = v23.
Rnodes_that_have_tolerations[v1] :- Rnode_taints[v],var v0 = TRtmp83{.node_name = v.node_name},var v1 = v0.
Rallowed_nodes[v1] :- Rspare_capacity_per_node[v],var v0 = TRtmp84{.name = v.name},var v1 = v0.
Roverinput88[v29] :- Rpods_to_assign[v15],Rpod_affinity_match_expressions[v16],(v15.uid == v16.pod_uid),true,var v17 = Ttmp85{.uid = v15.uid,.pod_name = v15.pod_name,.status = v15.status,.node_name = v15.node_name,.namespace = v15.namespace,.owner_name = v15.owner_name,.creation_timestamp = v15.creation_timestamp,.priority = v15.priority,.scheduler_name = v15.scheduler_name,.has_node_selector_labels = v15.has_node_selector_labels,.has_pod_affinity_requirements = v15.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v15.has_pod_anti_affinity_requirements,.has_node_port_requirements = v15.has_node_port_requirements,.has_topology_spread_constraints = v15.has_topology_spread_constraints,.equivalence_class = v15.equivalence_class,.qos_class = v15.qos_class,.resourceversion = v15.resourceversion,.last_requeue = v15.last_requeue,.controllable__node_name = v15.controllable__node_name,.pod_uid = v16.pod_uid,.label_selector = v16.label_selector,.affinity_match_expressions = v16.affinity_match_expressions,.topology_key = v16.topology_key},Rmatching_pods[v18],sql_array_contains(v16.affinity_match_expressions, v18.expr_id),true,var v19 = Ttmp86{.uid = v17.uid,.pod_name = v17.pod_name,.status = v17.status,.node_name = v17.node_name,.namespace = v17.namespace,.owner_name = v17.owner_name,.creation_timestamp = v17.creation_timestamp,.priority = v17.priority,.scheduler_name = v17.scheduler_name,.has_node_selector_labels = v17.has_node_selector_labels,.has_pod_affinity_requirements = v17.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v17.has_pod_anti_affinity_requirements,.has_node_port_requirements = v17.has_node_port_requirements,.has_topology_spread_constraints = v17.has_topology_spread_constraints,.equivalence_class = v17.equivalence_class,.qos_class = v17.qos_class,.resourceversion = v17.resourceversion,.last_requeue = v17.last_requeue,.controllable__node_name = v17.controllable__node_name,.pod_uid = v17.pod_uid,.label_selector = v17.label_selector,.affinity_match_expressions = v17.affinity_match_expressions,.topology_key = v17.topology_key,.expr_id = v18.expr_id,.label_operator = v18.label_operator,.pod_uid0 = v18.pod_uid},Rpods_to_assign[v20],((v18.pod_uid == v20.uid) and (v15.uid != v20.uid)),true,var v21 = Ttmp87{.uid = v19.uid,.pod_name = v19.pod_name,.status = v19.status,.node_name = v19.node_name,.namespace = v19.namespace,.owner_name = v19.owner_name,.creation_timestamp = v19.creation_timestamp,.priority = v19.priority,.scheduler_name = v19.scheduler_name,.has_node_selector_labels = v19.has_node_selector_labels,.has_pod_affinity_requirements = v19.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v19.has_pod_anti_affinity_requirements,.has_node_port_requirements = v19.has_node_port_requirements,.has_topology_spread_constraints = v19.has_topology_spread_constraints,.equivalence_class = v19.equivalence_class,.qos_class = v19.qos_class,.resourceversion = v19.resourceversion,.last_requeue = v19.last_requeue,.controllable__node_name = v19.controllable__node_name,.pod_uid = v19.pod_uid,.label_selector = v19.label_selector,.affinity_match_expressions = v19.affinity_match_expressions,.topology_key = v19.topology_key,.expr_id = v19.expr_id,.label_operator = v19.label_operator,.pod_uid0 = v19.pod_uid0,.uid0 = v20.uid,.pod_name0 = v20.pod_name,.status0 = v20.status,.node_name0 = v20.node_name,.namespace0 = v20.namespace,.owner_name0 = v20.owner_name,.creation_timestamp0 = v20.creation_timestamp,.priority0 = v20.priority,.scheduler_name0 = v20.scheduler_name,.has_node_selector_labels0 = v20.has_node_selector_labels,.has_pod_affinity_requirements0 = v20.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v20.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v20.has_node_port_requirements,.has_topology_spread_constraints0 = v20.has_topology_spread_constraints,.equivalence_class0 = v20.equivalence_class,.qos_class0 = v20.qos_class,.resourceversion0 = v20.resourceversion,.last_requeue0 = v20.last_requeue,.controllable__node_name0 = v20.controllable__node_name},(v15.has_pod_affinity_requirements == true),var gb22 = v15.uid,var gb23 = v18.pod_uid,var gb24 = v16.label_selector,var gb25 = v16.topology_key,var gb26 = v16.affinity_match_expressions,var gb27 = v20.node_name,var groupResult = (v15, v16, v18, v20).group_by((gb22, gb23, gb24, gb25, gb26, gb27)),var aggResult = agg90(groupResult),var v28 = TRtmp89{.gb11 = gb22,.gb12 = gb22,.pod_uid = gb22,.tmp = gb23,.tmp13 = gb27},aggResult.col,var v29 = v28.
Rover91[v39] :- Roverinput88[v30],var gb31 = v30.gb11,var groupResult38 = (v30).group_by((gb31)),var aggResult37 = agg93(groupResult38),var v36 = TRtmp92{.gb11 = gb31,.array_agg = aggResult37.array_agg},var v39 = v36.
Rover94[v49] :- Roverinput88[v40],var gb41 = v40.gb12,var groupResult48 = (v40).group_by((gb41)),var aggResult47 = agg96(groupResult48),var v46 = TRtmp95{.gb12 = gb41,.array_agg14 = aggResult47.array_agg14},var v49 = v46.
Rinter_pod_affinity_matches_pending[v56] :- Roverinput88[v50],Rover91[v51],(true and (v50.gb11 == v51.gb11)),var v52 = Ttmp97{.tmp = v50.tmp,.tmp13 = v50.tmp13,.gb11 = v50.gb11,.gb12 = v50.gb12,.pod_uid = v50.pod_uid,.array_agg = v51.array_agg},Rover94[v53],(true and (v52.gb12 == v53.gb12)),var v54 = Ttmp98{.tmp = v52.tmp,.tmp13 = v52.tmp13,.gb11 = v52.gb11,.gb12 = v52.gb12,.pod_uid = v52.pod_uid,.array_agg = v52.array_agg,.array_agg14 = v53.array_agg14},var v55 = TRtmp43{.pod_uid = v50.pod_uid,.pod_matches = v51.array_agg,.node_matches = v53.array_agg14},var v56 = v55.
Roverinput101[v29] :- Rpods_to_assign[v15],Rpod_affinity_match_expressions[v16],(v15.uid == v16.pod_uid),true,var v17 = Ttmp85{.uid = v15.uid,.pod_name = v15.pod_name,.status = v15.status,.node_name = v15.node_name,.namespace = v15.namespace,.owner_name = v15.owner_name,.creation_timestamp = v15.creation_timestamp,.priority = v15.priority,.scheduler_name = v15.scheduler_name,.has_node_selector_labels = v15.has_node_selector_labels,.has_pod_affinity_requirements = v15.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v15.has_pod_anti_affinity_requirements,.has_node_port_requirements = v15.has_node_port_requirements,.has_topology_spread_constraints = v15.has_topology_spread_constraints,.equivalence_class = v15.equivalence_class,.qos_class = v15.qos_class,.resourceversion = v15.resourceversion,.last_requeue = v15.last_requeue,.controllable__node_name = v15.controllable__node_name,.pod_uid = v16.pod_uid,.label_selector = v16.label_selector,.affinity_match_expressions = v16.affinity_match_expressions,.topology_key = v16.topology_key},Rmatching_pods[v18],sql_array_contains(v16.affinity_match_expressions, v18.expr_id),true,var v19 = Ttmp86{.uid = v17.uid,.pod_name = v17.pod_name,.status = v17.status,.node_name = v17.node_name,.namespace = v17.namespace,.owner_name = v17.owner_name,.creation_timestamp = v17.creation_timestamp,.priority = v17.priority,.scheduler_name = v17.scheduler_name,.has_node_selector_labels = v17.has_node_selector_labels,.has_pod_affinity_requirements = v17.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v17.has_pod_anti_affinity_requirements,.has_node_port_requirements = v17.has_node_port_requirements,.has_topology_spread_constraints = v17.has_topology_spread_constraints,.equivalence_class = v17.equivalence_class,.qos_class = v17.qos_class,.resourceversion = v17.resourceversion,.last_requeue = v17.last_requeue,.controllable__node_name = v17.controllable__node_name,.pod_uid = v17.pod_uid,.label_selector = v17.label_selector,.affinity_match_expressions = v17.affinity_match_expressions,.topology_key = v17.topology_key,.expr_id = v18.expr_id,.label_operator = v18.label_operator,.pod_uid0 = v18.pod_uid},Rassigned_pods[v20],((v18.pod_uid == v20.uid) and (v15.uid != v20.uid)),true,var v21 = Ttmp100{.uid = v19.uid,.pod_name = v19.pod_name,.status = v19.status,.node_name = v19.node_name,.namespace = v19.namespace,.owner_name = v19.owner_name,.creation_timestamp = v19.creation_timestamp,.priority = v19.priority,.scheduler_name = v19.scheduler_name,.has_node_selector_labels = v19.has_node_selector_labels,.has_pod_affinity_requirements = v19.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v19.has_pod_anti_affinity_requirements,.has_node_port_requirements = v19.has_node_port_requirements,.has_topology_spread_constraints = v19.has_topology_spread_constraints,.equivalence_class = v19.equivalence_class,.qos_class = v19.qos_class,.resourceversion = v19.resourceversion,.last_requeue = v19.last_requeue,.controllable__node_name = v19.controllable__node_name,.pod_uid = v19.pod_uid,.label_selector = v19.label_selector,.affinity_match_expressions = v19.affinity_match_expressions,.topology_key = v19.topology_key,.expr_id = v19.expr_id,.label_operator = v19.label_operator,.pod_uid0 = v19.pod_uid0,.uid0 = v20.uid,.pod_name0 = v20.pod_name,.status0 = v20.status,.node_name0 = v20.node_name,.namespace0 = v20.namespace,.owner_name0 = v20.owner_name,.creation_timestamp0 = v20.creation_timestamp,.priority0 = v20.priority,.scheduler_name0 = v20.scheduler_name,.has_node_selector_labels0 = v20.has_node_selector_labels,.has_pod_affinity_requirements0 = v20.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v20.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v20.has_node_port_requirements,.has_topology_spread_constraints0 = v20.has_topology_spread_constraints,.equivalence_class0 = v20.equivalence_class,.qos_class0 = v20.qos_class,.resourceversion0 = v20.resourceversion,.last_requeue0 = v20.last_requeue},(v15.has_pod_affinity_requirements == true),var gb22 = v15.uid,var gb23 = v18.pod_uid,var gb24 = v16.label_selector,var gb25 = v16.topology_key,var gb26 = v16.affinity_match_expressions,var gb27 = v20.node_name,var groupResult = (v15, v16, v18, v20).group_by((gb22, gb23, gb24, gb25, gb26, gb27)),var aggResult = agg103(groupResult),var v28 = TRtmp89{.gb11 = gb22,.gb12 = gb22,.pod_uid = gb22,.tmp = gb23,.tmp13 = gb27},aggResult.col,var v29 = v28.
Rover104[v39] :- Roverinput101[v30],var gb31 = v30.gb11,var groupResult38 = (v30).group_by((gb31)),var aggResult37 = agg106(groupResult38),var v36 = TRtmp92{.gb11 = gb31,.array_agg = aggResult37.array_agg},var v39 = v36.
Rover107[v49] :- Roverinput101[v40],var gb41 = v40.gb12,var groupResult48 = (v40).group_by((gb41)),var aggResult47 = agg109(groupResult48),var v46 = TRtmp95{.gb12 = gb41,.array_agg14 = aggResult47.array_agg14},var v49 = v46.
Rinter_pod_affinity_matches_scheduled[v56] :- Roverinput101[v50],Rover104[v51],(true and (v50.gb11 == v51.gb11)),var v52 = Ttmp97{.tmp = v50.tmp,.tmp13 = v50.tmp13,.gb11 = v50.gb11,.gb12 = v50.gb12,.pod_uid = v50.pod_uid,.array_agg = v51.array_agg},Rover107[v53],(true and (v52.gb12 == v53.gb12)),var v54 = Ttmp98{.tmp = v52.tmp,.tmp13 = v52.tmp13,.gb11 = v52.gb11,.gb12 = v52.gb12,.pod_uid = v52.pod_uid,.array_agg = v52.array_agg,.array_agg14 = v53.array_agg14},var v55 = TRtmp43{.pod_uid = v50.pod_uid,.pod_matches = v51.array_agg,.node_matches = v53.array_agg14},var v56 = v55.
Roverinput114[v29] :- Rpods_to_assign[v15],Rpod_anti_affinity_match_expressions[v16],(v15.uid == v16.pod_uid),true,var v17 = Ttmp111{.uid = v15.uid,.pod_name = v15.pod_name,.status = v15.status,.node_name = v15.node_name,.namespace = v15.namespace,.owner_name = v15.owner_name,.creation_timestamp = v15.creation_timestamp,.priority = v15.priority,.scheduler_name = v15.scheduler_name,.has_node_selector_labels = v15.has_node_selector_labels,.has_pod_affinity_requirements = v15.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v15.has_pod_anti_affinity_requirements,.has_node_port_requirements = v15.has_node_port_requirements,.has_topology_spread_constraints = v15.has_topology_spread_constraints,.equivalence_class = v15.equivalence_class,.qos_class = v15.qos_class,.resourceversion = v15.resourceversion,.last_requeue = v15.last_requeue,.controllable__node_name = v15.controllable__node_name,.pod_uid = v16.pod_uid,.label_selector = v16.label_selector,.anti_affinity_match_expressions = v16.anti_affinity_match_expressions,.topology_key = v16.topology_key},Rmatching_pods[v18],sql_array_contains(v16.anti_affinity_match_expressions, v18.expr_id),true,var v19 = Ttmp112{.uid = v17.uid,.pod_name = v17.pod_name,.status = v17.status,.node_name = v17.node_name,.namespace = v17.namespace,.owner_name = v17.owner_name,.creation_timestamp = v17.creation_timestamp,.priority = v17.priority,.scheduler_name = v17.scheduler_name,.has_node_selector_labels = v17.has_node_selector_labels,.has_pod_affinity_requirements = v17.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v17.has_pod_anti_affinity_requirements,.has_node_port_requirements = v17.has_node_port_requirements,.has_topology_spread_constraints = v17.has_topology_spread_constraints,.equivalence_class = v17.equivalence_class,.qos_class = v17.qos_class,.resourceversion = v17.resourceversion,.last_requeue = v17.last_requeue,.controllable__node_name = v17.controllable__node_name,.pod_uid = v17.pod_uid,.label_selector = v17.label_selector,.anti_affinity_match_expressions = v17.anti_affinity_match_expressions,.topology_key = v17.topology_key,.expr_id = v18.expr_id,.label_operator = v18.label_operator,.pod_uid0 = v18.pod_uid},Rpods_to_assign[v20],((v18.pod_uid == v20.uid) and (v15.uid != v20.uid)),true,var v21 = Ttmp113{.uid = v19.uid,.pod_name = v19.pod_name,.status = v19.status,.node_name = v19.node_name,.namespace = v19.namespace,.owner_name = v19.owner_name,.creation_timestamp = v19.creation_timestamp,.priority = v19.priority,.scheduler_name = v19.scheduler_name,.has_node_selector_labels = v19.has_node_selector_labels,.has_pod_affinity_requirements = v19.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v19.has_pod_anti_affinity_requirements,.has_node_port_requirements = v19.has_node_port_requirements,.has_topology_spread_constraints = v19.has_topology_spread_constraints,.equivalence_class = v19.equivalence_class,.qos_class = v19.qos_class,.resourceversion = v19.resourceversion,.last_requeue = v19.last_requeue,.controllable__node_name = v19.controllable__node_name,.pod_uid = v19.pod_uid,.label_selector = v19.label_selector,.anti_affinity_match_expressions = v19.anti_affinity_match_expressions,.topology_key = v19.topology_key,.expr_id = v19.expr_id,.label_operator = v19.label_operator,.pod_uid0 = v19.pod_uid0,.uid0 = v20.uid,.pod_name0 = v20.pod_name,.status0 = v20.status,.node_name0 = v20.node_name,.namespace0 = v20.namespace,.owner_name0 = v20.owner_name,.creation_timestamp0 = v20.creation_timestamp,.priority0 = v20.priority,.scheduler_name0 = v20.scheduler_name,.has_node_selector_labels0 = v20.has_node_selector_labels,.has_pod_affinity_requirements0 = v20.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v20.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v20.has_node_port_requirements,.has_topology_spread_constraints0 = v20.has_topology_spread_constraints,.equivalence_class0 = v20.equivalence_class,.qos_class0 = v20.qos_class,.resourceversion0 = v20.resourceversion,.last_requeue0 = v20.last_requeue,.controllable__node_name0 = v20.controllable__node_name},(v15.has_pod_anti_affinity_requirements == true),var gb22 = v15.uid,var gb23 = v18.pod_uid,var gb24 = v16.label_selector,var gb25 = v16.topology_key,var gb26 = v16.anti_affinity_match_expressions,var gb27 = v20.node_name,var groupResult = (v15, v16, v18, v20).group_by((gb22, gb23, gb24, gb25, gb26, gb27)),var aggResult = agg116(groupResult),var v28 = TRtmp89{.gb11 = gb22,.gb12 = gb22,.pod_uid = gb22,.tmp = gb23,.tmp13 = gb27},aggResult.col,var v29 = v28.
Rover117[v39] :- Roverinput114[v30],var gb31 = v30.gb11,var groupResult38 = (v30).group_by((gb31)),var aggResult37 = agg119(groupResult38),var v36 = TRtmp92{.gb11 = gb31,.array_agg = aggResult37.array_agg},var v39 = v36.
Rover120[v49] :- Roverinput114[v40],var gb41 = v40.gb12,var groupResult48 = (v40).group_by((gb41)),var aggResult47 = agg122(groupResult48),var v46 = TRtmp95{.gb12 = gb41,.array_agg14 = aggResult47.array_agg14},var v49 = v46.
Rinter_pod_anti_affinity_matches_pending[v56] :- Roverinput114[v50],Rover117[v51],(true and (v50.gb11 == v51.gb11)),var v52 = Ttmp97{.tmp = v50.tmp,.tmp13 = v50.tmp13,.gb11 = v50.gb11,.gb12 = v50.gb12,.pod_uid = v50.pod_uid,.array_agg = v51.array_agg},Rover120[v53],(true and (v52.gb12 == v53.gb12)),var v54 = Ttmp98{.tmp = v52.tmp,.tmp13 = v52.tmp13,.gb11 = v52.gb11,.gb12 = v52.gb12,.pod_uid = v52.pod_uid,.array_agg = v52.array_agg,.array_agg14 = v53.array_agg14},var v55 = TRtmp43{.pod_uid = v50.pod_uid,.pod_matches = v51.array_agg,.node_matches = v53.array_agg14},var v56 = v55.
Roverinput125[v29] :- Rpods_to_assign[v15],Rpod_anti_affinity_match_expressions[v16],(v15.uid == v16.pod_uid),true,var v17 = Ttmp111{.uid = v15.uid,.pod_name = v15.pod_name,.status = v15.status,.node_name = v15.node_name,.namespace = v15.namespace,.owner_name = v15.owner_name,.creation_timestamp = v15.creation_timestamp,.priority = v15.priority,.scheduler_name = v15.scheduler_name,.has_node_selector_labels = v15.has_node_selector_labels,.has_pod_affinity_requirements = v15.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v15.has_pod_anti_affinity_requirements,.has_node_port_requirements = v15.has_node_port_requirements,.has_topology_spread_constraints = v15.has_topology_spread_constraints,.equivalence_class = v15.equivalence_class,.qos_class = v15.qos_class,.resourceversion = v15.resourceversion,.last_requeue = v15.last_requeue,.controllable__node_name = v15.controllable__node_name,.pod_uid = v16.pod_uid,.label_selector = v16.label_selector,.anti_affinity_match_expressions = v16.anti_affinity_match_expressions,.topology_key = v16.topology_key},Rmatching_pods[v18],sql_array_contains(v16.anti_affinity_match_expressions, v18.expr_id),true,var v19 = Ttmp112{.uid = v17.uid,.pod_name = v17.pod_name,.status = v17.status,.node_name = v17.node_name,.namespace = v17.namespace,.owner_name = v17.owner_name,.creation_timestamp = v17.creation_timestamp,.priority = v17.priority,.scheduler_name = v17.scheduler_name,.has_node_selector_labels = v17.has_node_selector_labels,.has_pod_affinity_requirements = v17.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v17.has_pod_anti_affinity_requirements,.has_node_port_requirements = v17.has_node_port_requirements,.has_topology_spread_constraints = v17.has_topology_spread_constraints,.equivalence_class = v17.equivalence_class,.qos_class = v17.qos_class,.resourceversion = v17.resourceversion,.last_requeue = v17.last_requeue,.controllable__node_name = v17.controllable__node_name,.pod_uid = v17.pod_uid,.label_selector = v17.label_selector,.anti_affinity_match_expressions = v17.anti_affinity_match_expressions,.topology_key = v17.topology_key,.expr_id = v18.expr_id,.label_operator = v18.label_operator,.pod_uid0 = v18.pod_uid},Rassigned_pods[v20],((v18.pod_uid == v20.uid) and (v15.uid != v20.uid)),true,var v21 = Ttmp124{.uid = v19.uid,.pod_name = v19.pod_name,.status = v19.status,.node_name = v19.node_name,.namespace = v19.namespace,.owner_name = v19.owner_name,.creation_timestamp = v19.creation_timestamp,.priority = v19.priority,.scheduler_name = v19.scheduler_name,.has_node_selector_labels = v19.has_node_selector_labels,.has_pod_affinity_requirements = v19.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v19.has_pod_anti_affinity_requirements,.has_node_port_requirements = v19.has_node_port_requirements,.has_topology_spread_constraints = v19.has_topology_spread_constraints,.equivalence_class = v19.equivalence_class,.qos_class = v19.qos_class,.resourceversion = v19.resourceversion,.last_requeue = v19.last_requeue,.controllable__node_name = v19.controllable__node_name,.pod_uid = v19.pod_uid,.label_selector = v19.label_selector,.anti_affinity_match_expressions = v19.anti_affinity_match_expressions,.topology_key = v19.topology_key,.expr_id = v19.expr_id,.label_operator = v19.label_operator,.pod_uid0 = v19.pod_uid0,.uid0 = v20.uid,.pod_name0 = v20.pod_name,.status0 = v20.status,.node_name0 = v20.node_name,.namespace0 = v20.namespace,.owner_name0 = v20.owner_name,.creation_timestamp0 = v20.creation_timestamp,.priority0 = v20.priority,.scheduler_name0 = v20.scheduler_name,.has_node_selector_labels0 = v20.has_node_selector_labels,.has_pod_affinity_requirements0 = v20.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v20.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v20.has_node_port_requirements,.has_topology_spread_constraints0 = v20.has_topology_spread_constraints,.equivalence_class0 = v20.equivalence_class,.qos_class0 = v20.qos_class,.resourceversion0 = v20.resourceversion,.last_requeue0 = v20.last_requeue},(v15.has_pod_anti_affinity_requirements == true),var gb22 = v15.uid,var gb23 = v18.pod_uid,var gb24 = v16.label_selector,var gb25 = v16.topology_key,var gb26 = v16.anti_affinity_match_expressions,var gb27 = v20.node_name,var groupResult = (v15, v16, v18, v20).group_by((gb22, gb23, gb24, gb25, gb26, gb27)),var aggResult = agg127(groupResult),var v28 = TRtmp89{.gb11 = gb22,.gb12 = gb22,.pod_uid = gb22,.tmp = gb23,.tmp13 = gb27},aggResult.col,var v29 = v28.
Rover128[v39] :- Roverinput125[v30],var gb31 = v30.gb11,var groupResult38 = (v30).group_by((gb31)),var aggResult37 = agg130(groupResult38),var v36 = TRtmp92{.gb11 = gb31,.array_agg = aggResult37.array_agg},var v39 = v36.
Rover131[v49] :- Roverinput125[v40],var gb41 = v40.gb12,var groupResult48 = (v40).group_by((gb41)),var aggResult47 = agg133(groupResult48),var v46 = TRtmp95{.gb12 = gb41,.array_agg14 = aggResult47.array_agg14},var v49 = v46.
Rinter_pod_anti_affinity_matches_scheduled[v56] :- Roverinput125[v50],Rover128[v51],(true and (v50.gb11 == v51.gb11)),var v52 = Ttmp97{.tmp = v50.tmp,.tmp13 = v50.tmp13,.gb11 = v50.gb11,.gb12 = v50.gb12,.pod_uid = v50.pod_uid,.array_agg = v51.array_agg},Rover131[v53],(true and (v52.gb12 == v53.gb12)),var v54 = Ttmp98{.tmp = v52.tmp,.tmp13 = v52.tmp13,.gb11 = v52.gb11,.gb12 = v52.gb12,.pod_uid = v52.pod_uid,.array_agg = v52.array_agg,.array_agg14 = v53.array_agg14},var v55 = TRtmp43{.pod_uid = v50.pod_uid,.pod_matches = v51.array_agg,.node_matches = v53.array_agg14},var v56 = v55.
Rpods_to_assign_no_limit_count[v2] :- Rpods_to_assign_no_limit[v],var groupResult = (v).group_by(()),var aggResult = agg136(groupResult),var v1 = aggResult,var v2 = v1.
Rhelper_view_preempt[v1] :- Rpods_to_assign[v],var gb = v.node_name,var groupResult = (v).group_by((gb)),var aggResult = agg138(groupResult),var v0 = TRtmp137{.node_name = gb,.m = aggResult.m},var v1 = v0.
Rtmp140[v0] :- Rpods_to_assign[v],var v0 = v.
Rtmp143[v5] :- Rpod_info[v1],Rhelper_view_preempt[v2],(v1.priority < v2.m),true,var v3 = Ttmp141{.uid = v1.uid,.pod_name = v1.pod_name,.status = v1.status,.node_name = v1.node_name,.namespace = v1.namespace,.owner_name = v1.owner_name,.creation_timestamp = v1.creation_timestamp,.priority = v1.priority,.scheduler_name = v1.scheduler_name,.has_node_selector_labels = v1.has_node_selector_labels,.has_pod_affinity_requirements = v1.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v1.has_pod_anti_affinity_requirements,.has_node_port_requirements = v1.has_node_port_requirements,.has_topology_spread_constraints = v1.has_topology_spread_constraints,.equivalence_class = v1.equivalence_class,.qos_class = v1.qos_class,.resourceversion = v1.resourceversion,.last_requeue = v1.last_requeue,.node_name0 = v2.node_name,.m = v2.m},(not is_null(v1.node_name)),var v4 = TRtmp21{.uid = v1.uid,.pod_name = v1.pod_name,.status = v1.status,.node_name = v1.node_name,.namespace = v1.namespace,.owner_name = v1.owner_name,.creation_timestamp = v1.creation_timestamp,.priority = v1.priority,.scheduler_name = v1.scheduler_name,.has_node_selector_labels = v1.has_node_selector_labels,.has_pod_affinity_requirements = v1.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v1.has_pod_anti_affinity_requirements,.has_node_port_requirements = v1.has_node_port_requirements,.has_topology_spread_constraints = v1.has_topology_spread_constraints,.equivalence_class = v1.equivalence_class,.qos_class = v1.qos_class,.resourceversion = v1.resourceversion,.last_requeue = v1.last_requeue,.controllable__node_name = v1.node_name},var v5 = v4.
Runion144[v6] :- Rtmp140[v0],var v6 = v0.
Runion144[v6] :- Rtmp143[v5],var v6 = v5.
Rpods_to_assign_preempt[v7] :- Runion144[v6],var v7 = v6.
Rassigned_pods_preempt[v3] :- Rpod_info[v],Rhelper_view_preempt[v0],(v.priority >= v0.m),true,var v1 = Ttmp141{.uid = v.uid,.pod_name = v.pod_name,.status = v.status,.node_name = v.node_name,.namespace = v.namespace,.owner_name = v.owner_name,.creation_timestamp = v.creation_timestamp,.priority = v.priority,.scheduler_name = v.scheduler_name,.has_node_selector_labels = v.has_node_selector_labels,.has_pod_affinity_requirements = v.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v.has_pod_anti_affinity_requirements,.has_node_port_requirements = v.has_node_port_requirements,.has_topology_spread_constraints = v.has_topology_spread_constraints,.equivalence_class = v.equivalence_class,.qos_class = v.qos_class,.resourceversion = v.resourceversion,.last_requeue = v.last_requeue,.node_name0 = v0.node_name,.m = v0.m},(not is_null(v.node_name)),var v2 = TRtmp21{.uid = v.uid,.pod_name = v.pod_name,.status = v.status,.node_name = v.node_name,.namespace = v.namespace,.owner_name = v.owner_name,.creation_timestamp = v.creation_timestamp,.priority = v.priority,.scheduler_name = v.scheduler_name,.has_node_selector_labels = v.has_node_selector_labels,.has_pod_affinity_requirements = v.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v.has_pod_anti_affinity_requirements,.has_node_port_requirements = v.has_node_port_requirements,.has_topology_spread_constraints = v.has_topology_spread_constraints,.equivalence_class = v.equivalence_class,.qos_class = v.qos_class,.resourceversion = v.resourceversion,.last_requeue = v.last_requeue,.controllable__node_name = v.node_name},var v3 = v2.
Rmatching_nodes_preempt[v9] :- Rmatch_expressions[v],Rnode_labels[v0],((((((v.label_operator == "In") and (v.label_key == v0.label_key)) and sql_array_contains(v.label_values, v0.label_value)) or ((v.label_operator == "Exists") and (v.label_key == v0.label_key))) or (v.label_operator == "NotIn")) or (v.label_operator == "DoesNotExist")),true,var v1 = Ttmp27{.expr_id = v.expr_id,.label_key = v.label_key,.label_operator = v.label_operator,.label_values = v.label_values,.node_name = v0.node_name,.label_key0 = v0.label_key,.label_value = v0.label_value},var gb = v0.label_key,var gb2 = v.expr_id,var gb3 = v.label_operator,var gb4 = v0.node_name,var gb5 = v.label_key,var gb6 = v.label_values,var gb7 = v0.label_value,var groupResult = (v, v0).group_by((gb, gb2, gb3, gb4, gb5, gb6, gb7)),var aggResult = agg147(groupResult),var v8 = TRtmp28{.expr_id = gb2,.node_name = gb4},aggResult.col,var v9 = v8.
Rmatching_pods_preempt[v9] :- Rmatch_expressions[v],Rpod_labels[v0],((((((v.label_operator == "In") and (v.label_key == v0.label_key)) and sql_array_contains(v.label_values, v0.label_value)) or ((v.label_operator == "Exists") and (v.label_key == v0.label_key))) or (v.label_operator == "NotIn")) or (v.label_operator == "DoesNotExist")),true,var v1 = Ttmp29{.expr_id = v.expr_id,.label_key = v.label_key,.label_operator = v.label_operator,.label_values = v.label_values,.pod_uid = v0.pod_uid,.label_key0 = v0.label_key,.label_value = v0.label_value},var gb = v.expr_id,var gb2 = v.label_operator,var gb3 = v0.pod_uid,var gb4 = v.label_key,var gb5 = v0.label_key,var gb6 = v.label_values,var gb7 = v0.label_value,var groupResult = (v, v0).group_by((gb, gb2, gb3, gb4, gb5, gb6, gb7)),var aggResult = agg149(groupResult),var v8 = TRtmp30{.expr_id = gb,.label_operator = gb2,.pod_uid = gb3},aggResult.col,var v9 = v8.
Roverinput150[v17] :- Rpods_to_assign_preempt[v9],Rpod_ports_request[v10],(v9.uid == v10.pod_uid),true,var v11 = Ttmp32{.uid = v9.uid,.pod_name = v9.pod_name,.status = v9.status,.node_name = v9.node_name,.namespace = v9.namespace,.owner_name = v9.owner_name,.creation_timestamp = v9.creation_timestamp,.priority = v9.priority,.scheduler_name = v9.scheduler_name,.has_node_selector_labels = v9.has_node_selector_labels,.has_pod_affinity_requirements = v9.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v9.has_pod_anti_affinity_requirements,.has_node_port_requirements = v9.has_node_port_requirements,.has_topology_spread_constraints = v9.has_topology_spread_constraints,.equivalence_class = v9.equivalence_class,.qos_class = v9.qos_class,.resourceversion = v9.resourceversion,.last_requeue = v9.last_requeue,.controllable__node_name = v9.controllable__node_name,.pod_uid = v10.pod_uid,.host_ip = v10.host_ip,.host_port = v10.host_port,.host_protocol = v10.host_protocol},Rpod_ports_request[v12],((((v9.uid != v12.pod_uid) and (v10.host_port == v12.host_port)) and (v10.host_protocol == v12.host_protocol)) and (((v10.host_ip == v12.host_ip) or (v10.host_ip == "0.0.0.0")) or (v12.host_ip == "0.0.0.0"))),true,var v13 = Ttmp33{.uid = v11.uid,.pod_name = v11.pod_name,.status = v11.status,.node_name = v11.node_name,.namespace = v11.namespace,.owner_name = v11.owner_name,.creation_timestamp = v11.creation_timestamp,.priority = v11.priority,.scheduler_name = v11.scheduler_name,.has_node_selector_labels = v11.has_node_selector_labels,.has_pod_affinity_requirements = v11.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v11.has_pod_anti_affinity_requirements,.has_node_port_requirements = v11.has_node_port_requirements,.has_topology_spread_constraints = v11.has_topology_spread_constraints,.equivalence_class = v11.equivalence_class,.qos_class = v11.qos_class,.resourceversion = v11.resourceversion,.last_requeue = v11.last_requeue,.controllable__node_name = v11.controllable__node_name,.pod_uid = v11.pod_uid,.host_ip = v11.host_ip,.host_port = v11.host_port,.host_protocol = v11.host_protocol,.pod_uid0 = v12.pod_uid,.host_ip0 = v12.host_ip,.host_port0 = v12.host_port,.host_protocol0 = v12.host_protocol},Rpods_to_assign_preempt[v14],(v14.uid == v12.pod_uid),true,var v15 = Ttmp34{.uid = v13.uid,.pod_name = v13.pod_name,.status = v13.status,.node_name = v13.node_name,.namespace = v13.namespace,.owner_name = v13.owner_name,.creation_timestamp = v13.creation_timestamp,.priority = v13.priority,.scheduler_name = v13.scheduler_name,.has_node_selector_labels = v13.has_node_selector_labels,.has_pod_affinity_requirements = v13.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v13.has_pod_anti_affinity_requirements,.has_node_port_requirements = v13.has_node_port_requirements,.has_topology_spread_constraints = v13.has_topology_spread_constraints,.equivalence_class = v13.equivalence_class,.qos_class = v13.qos_class,.resourceversion = v13.resourceversion,.last_requeue = v13.last_requeue,.controllable__node_name = v13.controllable__node_name,.pod_uid = v13.pod_uid,.host_ip = v13.host_ip,.host_port = v13.host_port,.host_protocol = v13.host_protocol,.pod_uid0 = v13.pod_uid0,.host_ip0 = v13.host_ip0,.host_port0 = v13.host_port0,.host_protocol0 = v13.host_protocol0,.uid0 = v14.uid,.pod_name0 = v14.pod_name,.status0 = v14.status,.node_name0 = v14.node_name,.namespace0 = v14.namespace,.owner_name0 = v14.owner_name,.creation_timestamp0 = v14.creation_timestamp,.priority0 = v14.priority,.scheduler_name0 = v14.scheduler_name,.has_node_selector_labels0 = v14.has_node_selector_labels,.has_pod_affinity_requirements0 = v14.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v14.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v14.has_node_port_requirements,.has_topology_spread_constraints0 = v14.has_topology_spread_constraints,.equivalence_class0 = v14.equivalence_class,.qos_class0 = v14.qos_class,.resourceversion0 = v14.resourceversion,.last_requeue0 = v14.last_requeue,.controllable__node_name0 = v14.controllable__node_name},var v16 = TRtmp35{.tmp = v14.uid,.tmp7 = v14.node_name,.gb = v9.uid,.gb6 = v9.uid,.pod_uid = v9.uid},var v17 = v16.
Rover152[v22] :- Roverinput150[v18],var gb19 = v18.gb,var groupResult = (v18).group_by((gb19)),var aggResult = agg154(groupResult),var v21 = TRtmp36{.gb = gb19,.array_agg = aggResult.array_agg},var v22 = v21.
Rover155[v32] :- Roverinput150[v23],var gb24 = v23.gb6,var groupResult31 = (v23).group_by((gb24)),var aggResult30 = agg157(groupResult31),var v29 = TRtmp39{.gb6 = gb24,.array_agg8 = aggResult30.array_agg8},var v32 = v29.
Rpods_with_port_requests_pending_preempt[v39] :- Roverinput150[v33],Rover152[v34],(true and (v33.gb == v34.gb)),var v35 = Ttmp41{.tmp = v33.tmp,.tmp7 = v33.tmp7,.gb = v33.gb,.gb6 = v33.gb6,.pod_uid = v33.pod_uid,.array_agg = v34.array_agg},Rover155[v36],(true and (v35.gb6 == v36.gb6)),var v37 = Ttmp42{.tmp = v35.tmp,.tmp7 = v35.tmp7,.gb = v35.gb,.gb6 = v35.gb6,.pod_uid = v35.pod_uid,.array_agg = v35.array_agg,.array_agg8 = v36.array_agg8},var v38 = TRtmp43{.pod_uid = v33.pod_uid,.pod_matches = v34.array_agg,.node_matches = v36.array_agg8},var v39 = v38.
Roverinput159[v17] :- Rpods_to_assign_preempt[v9],Rpod_ports_request[v10],(v9.uid == v10.pod_uid),true,var v11 = Ttmp32{.uid = v9.uid,.pod_name = v9.pod_name,.status = v9.status,.node_name = v9.node_name,.namespace = v9.namespace,.owner_name = v9.owner_name,.creation_timestamp = v9.creation_timestamp,.priority = v9.priority,.scheduler_name = v9.scheduler_name,.has_node_selector_labels = v9.has_node_selector_labels,.has_pod_affinity_requirements = v9.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v9.has_pod_anti_affinity_requirements,.has_node_port_requirements = v9.has_node_port_requirements,.has_topology_spread_constraints = v9.has_topology_spread_constraints,.equivalence_class = v9.equivalence_class,.qos_class = v9.qos_class,.resourceversion = v9.resourceversion,.last_requeue = v9.last_requeue,.controllable__node_name = v9.controllable__node_name,.pod_uid = v10.pod_uid,.host_ip = v10.host_ip,.host_port = v10.host_port,.host_protocol = v10.host_protocol},Rpod_ports_request[v12],((((v9.uid != v12.pod_uid) and (v10.host_port == v12.host_port)) and (v10.host_protocol == v12.host_protocol)) and (((v10.host_ip == v12.host_ip) or (v10.host_ip == "0.0.0.0")) or (v12.host_ip == "0.0.0.0"))),true,var v13 = Ttmp33{.uid = v11.uid,.pod_name = v11.pod_name,.status = v11.status,.node_name = v11.node_name,.namespace = v11.namespace,.owner_name = v11.owner_name,.creation_timestamp = v11.creation_timestamp,.priority = v11.priority,.scheduler_name = v11.scheduler_name,.has_node_selector_labels = v11.has_node_selector_labels,.has_pod_affinity_requirements = v11.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v11.has_pod_anti_affinity_requirements,.has_node_port_requirements = v11.has_node_port_requirements,.has_topology_spread_constraints = v11.has_topology_spread_constraints,.equivalence_class = v11.equivalence_class,.qos_class = v11.qos_class,.resourceversion = v11.resourceversion,.last_requeue = v11.last_requeue,.controllable__node_name = v11.controllable__node_name,.pod_uid = v11.pod_uid,.host_ip = v11.host_ip,.host_port = v11.host_port,.host_protocol = v11.host_protocol,.pod_uid0 = v12.pod_uid,.host_ip0 = v12.host_ip,.host_port0 = v12.host_port,.host_protocol0 = v12.host_protocol},Rassigned_pods_preempt[v14],(v14.uid == v12.pod_uid),true,var v15 = Ttmp34{.uid = v13.uid,.pod_name = v13.pod_name,.status = v13.status,.node_name = v13.node_name,.namespace = v13.namespace,.owner_name = v13.owner_name,.creation_timestamp = v13.creation_timestamp,.priority = v13.priority,.scheduler_name = v13.scheduler_name,.has_node_selector_labels = v13.has_node_selector_labels,.has_pod_affinity_requirements = v13.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v13.has_pod_anti_affinity_requirements,.has_node_port_requirements = v13.has_node_port_requirements,.has_topology_spread_constraints = v13.has_topology_spread_constraints,.equivalence_class = v13.equivalence_class,.qos_class = v13.qos_class,.resourceversion = v13.resourceversion,.last_requeue = v13.last_requeue,.controllable__node_name = v13.controllable__node_name,.pod_uid = v13.pod_uid,.host_ip = v13.host_ip,.host_port = v13.host_port,.host_protocol = v13.host_protocol,.pod_uid0 = v13.pod_uid0,.host_ip0 = v13.host_ip0,.host_port0 = v13.host_port0,.host_protocol0 = v13.host_protocol0,.uid0 = v14.uid,.pod_name0 = v14.pod_name,.status0 = v14.status,.node_name0 = v14.node_name,.namespace0 = v14.namespace,.owner_name0 = v14.owner_name,.creation_timestamp0 = v14.creation_timestamp,.priority0 = v14.priority,.scheduler_name0 = v14.scheduler_name,.has_node_selector_labels0 = v14.has_node_selector_labels,.has_pod_affinity_requirements0 = v14.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v14.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v14.has_node_port_requirements,.has_topology_spread_constraints0 = v14.has_topology_spread_constraints,.equivalence_class0 = v14.equivalence_class,.qos_class0 = v14.qos_class,.resourceversion0 = v14.resourceversion,.last_requeue0 = v14.last_requeue,.controllable__node_name0 = v14.controllable__node_name},var v16 = TRtmp35{.tmp = v14.uid,.tmp7 = v14.node_name,.gb = v9.uid,.gb6 = v9.uid,.pod_uid = v9.uid},var v17 = v16.
Rover161[v22] :- Roverinput159[v18],var gb19 = v18.gb,var groupResult = (v18).group_by((gb19)),var aggResult = agg163(groupResult),var v21 = TRtmp36{.gb = gb19,.array_agg = aggResult.array_agg},var v22 = v21.
Rover164[v32] :- Roverinput159[v23],var gb24 = v23.gb6,var groupResult31 = (v23).group_by((gb24)),var aggResult30 = agg166(groupResult31),var v29 = TRtmp39{.gb6 = gb24,.array_agg8 = aggResult30.array_agg8},var v32 = v29.
Rpods_with_port_requests_scheduled_preempt[v39] :- Roverinput159[v33],Rover161[v34],(true and (v33.gb == v34.gb)),var v35 = Ttmp41{.tmp = v33.tmp,.tmp7 = v33.tmp7,.gb = v33.gb,.gb6 = v33.gb6,.pod_uid = v33.pod_uid,.array_agg = v34.array_agg},Rover164[v36],(true and (v35.gb6 == v36.gb6)),var v37 = Ttmp42{.tmp = v35.tmp,.tmp7 = v35.tmp7,.gb = v35.gb,.gb6 = v35.gb6,.pod_uid = v35.pod_uid,.array_agg = v35.array_agg,.array_agg8 = v36.array_agg8},var v38 = TRtmp43{.pod_uid = v33.pod_uid,.pod_matches = v34.array_agg,.node_matches = v36.array_agg8},var v39 = v38.
Roverinput168[v18] :- Rpods_to_assign_preempt[v8],Rpod_node_selector_labels[v9],(v8.uid == v9.pod_uid),true,var v10 = Ttmp54{.uid = v8.uid,.pod_name = v8.pod_name,.status = v8.status,.node_name = v8.node_name,.namespace = v8.namespace,.owner_name = v8.owner_name,.creation_timestamp = v8.creation_timestamp,.priority = v8.priority,.scheduler_name = v8.scheduler_name,.has_node_selector_labels = v8.has_node_selector_labels,.has_pod_affinity_requirements = v8.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v8.has_pod_anti_affinity_requirements,.has_node_port_requirements = v8.has_node_port_requirements,.has_topology_spread_constraints = v8.has_topology_spread_constraints,.equivalence_class = v8.equivalence_class,.qos_class = v8.qos_class,.resourceversion = v8.resourceversion,.last_requeue = v8.last_requeue,.controllable__node_name = v8.controllable__node_name,.pod_uid = v9.pod_uid,.term = v9.term,.match_expressions = v9.match_expressions},Rmatching_nodes[v11],sql_array_contains(v9.match_expressions, v11.expr_id),true,var v12 = Ttmp55{.uid = v10.uid,.pod_name = v10.pod_name,.status = v10.status,.node_name = v10.node_name,.namespace = v10.namespace,.owner_name = v10.owner_name,.creation_timestamp = v10.creation_timestamp,.priority = v10.priority,.scheduler_name = v10.scheduler_name,.has_node_selector_labels = v10.has_node_selector_labels,.has_pod_affinity_requirements = v10.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v10.has_pod_anti_affinity_requirements,.has_node_port_requirements = v10.has_node_port_requirements,.has_topology_spread_constraints = v10.has_topology_spread_constraints,.equivalence_class = v10.equivalence_class,.qos_class = v10.qos_class,.resourceversion = v10.resourceversion,.last_requeue = v10.last_requeue,.controllable__node_name = v10.controllable__node_name,.pod_uid = v10.pod_uid,.term = v10.term,.match_expressions = v10.match_expressions,.expr_id = v11.expr_id,.node_name0 = v11.node_name},(v8.has_node_selector_labels == true),var gb13 = v8.uid,var gb14 = v9.match_expressions,var gb15 = v9.term,var gb16 = v11.node_name,var groupResult = (v8, v9, v11).group_by((gb13, gb14, gb15, gb16)),var aggResult = agg170(groupResult),var v17 = TRtmp57{.gb7 = gb13,.pod_uid = gb13,.tmp = gb16},aggResult.col,var v18 = v17.
Rover171[v28] :- Roverinput168[v19],var gb20 = v19.gb7,var groupResult27 = (v19).group_by((gb20)),var aggResult26 = agg173(groupResult27),var v25 = TRtmp60{.gb7 = gb20,.array_agg = aggResult26.array_agg},var v28 = v25.
Rpod_node_selector_matches_preempt[v33] :- Roverinput168[v29],Rover171[v30],(true and (v29.gb7 == v30.gb7)),var v31 = Ttmp62{.tmp = v29.tmp,.gb7 = v29.gb7,.pod_uid = v29.pod_uid,.array_agg = v30.array_agg},var v32 = TRtmp63{.pod_uid = v29.pod_uid,.node_matches = v30.array_agg},var v33 = v32.
Rtmp176[v6] :- Rpod_info[v2],Rpod_resource_demands[Tpod_resource_demands{v2.uid, resource, demand}],
var v3 = Tpod_resource_demands{.uid = v2.uid, .resource = resource, .demand = demand},
true,var v4 = Ttmp65{.uid = v2.uid,.pod_name = v2.pod_name,.status = v2.status,.node_name = v2.node_name,.namespace = v2.namespace,.owner_name = v2.owner_name,.creation_timestamp = v2.creation_timestamp,.priority = v2.priority,.scheduler_name = v2.scheduler_name,.has_node_selector_labels = v2.has_node_selector_labels,.has_pod_affinity_requirements = v2.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v2.has_pod_anti_affinity_requirements,.has_node_port_requirements = v2.has_node_port_requirements,.has_topology_spread_constraints = v2.has_topology_spread_constraints,.equivalence_class = v2.equivalence_class,.qos_class = v2.qos_class,.resourceversion = v2.resourceversion,.last_requeue = v2.last_requeue,.uid0 = v3.uid,.resource = v3.resource,.demand = v3.demand},var v5 = TRtmp66{.node_name = v2.node_name,.resource = v3.resource,.total_demand = v3.demand},var v6 = v5.
Rspare_capacity_per_node_preempt[v11] :- Rnode_info[v],Rnode_resources[Tnode_resources{v.uid, resource, allocatable}],
var v0 = Tnode_resources{.uid = v.uid, .resource = resource, .allocatable = allocatable},
true,var v1 = Ttmp64{.uid = v.uid,.name = v.name,.unschedulable = v.unschedulable,.out_of_disk = v.out_of_disk,.memory_pressure = v.memory_pressure,.disk_pressure = v.disk_pressure,.pid_pressure = v.pid_pressure,.ready = v.ready,.network_unavailable = v.network_unavailable,.uid0 = v0.uid,.resource = v0.resource,.allocatable = v0.allocatable},
Rtmp176[TRtmp66{Some{v.name}, v0.resource, total_demand}],
var v6 = TRtmp66{.node_name = Some{v.name}, .resource = v0.resource, .total_demand = total_demand},
true,var v7 = Ttmp68{.uid = v1.uid,.name = v1.name,.unschedulable = v1.unschedulable,.out_of_disk = v1.out_of_disk,.memory_pressure = v1.memory_pressure,.disk_pressure = v1.disk_pressure,.pid_pressure = v1.pid_pressure,.ready = v1.ready,.network_unavailable = v1.network_unavailable,.uid0 = v1.uid0,.resource = v1.resource,.allocatable = v1.allocatable,.node_name = v6.node_name,.resource0 = v6.resource,.total_demand = v6.total_demand},(((((((v.unschedulable == false) and (v.memory_pressure == false)) and (v.out_of_disk == false)) and (v.disk_pressure == false)) and (v.pid_pressure == false)) and (v.network_unavailable == false)) and (v.ready == true)),var gb = v.name,var gb8 = v0.resource,var gb9 = v0.allocatable,var groupResult = (v, v0, v6).group_by((gb, gb8, gb9)),var aggResult = agg178(groupResult),var v10 = TRtmp69{.name = gb,.resource = gb8,.capacity = aggResult.capacity},var v11 = v10.
Roverinput179[v5] :- Rnode_taints[v3],var v4 = TRtmp73{.gb = v3.node_name,.node_name = v3.node_name,.taint_key = v3.taint_key,.taint_value = v3.taint_value,.taint_effect = v3.taint_effect},var v5 = v4.
Rover181[v10] :- Roverinput179[v6],var gb7 = v6.gb,var groupResult = (v6).group_by((gb7)),var aggResult = agg183(groupResult),var v9 = TRtmp75{.gb = gb7,.count = aggResult.count},var v10 = v9.
Rtmp185[v15] :- Roverinput179[v11],Rover181[v12],(true and (v11.gb == v12.gb)),var v13 = Ttmp77{.gb = v11.gb,.node_name = v11.node_name,.taint_key = v11.taint_key,.taint_value = v11.taint_value,.taint_effect = v11.taint_effect,.count = v12.count},var v14 = TRtmp78{.node_name = v11.node_name,.taint_key = v11.taint_key,.taint_value = v11.taint_value,.taint_effect = v11.taint_effect,.num_taints = v12.count},var v15 = v14.
Rpods_that_tolerate_node_taints_preempt[v26] :- Rpods_to_assign_preempt[v],Rpod_tolerations[v0],(v.uid == v0.pod_uid),true,var v1 = Ttmp71{.uid = v.uid,.pod_name = v.pod_name,.status = v.status,.node_name = v.node_name,.namespace = v.namespace,.owner_name = v.owner_name,.creation_timestamp = v.creation_timestamp,.priority = v.priority,.scheduler_name = v.scheduler_name,.has_node_selector_labels = v.has_node_selector_labels,.has_pod_affinity_requirements = v.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v.has_pod_anti_affinity_requirements,.has_node_port_requirements = v.has_node_port_requirements,.has_topology_spread_constraints = v.has_topology_spread_constraints,.equivalence_class = v.equivalence_class,.qos_class = v.qos_class,.resourceversion = v.resourceversion,.last_requeue = v.last_requeue,.controllable__node_name = v.controllable__node_name,.pod_uid = v0.pod_uid,.tolerations_key = v0.tolerations_key,.tolerations_value = v0.tolerations_value,.tolerations_effect = v0.tolerations_effect,.tolerations_operator = v0.tolerations_operator},Rtmp185[v15],unwrapBool(b_and_NN(b_and_NN(s_eq_NR(v0.tolerations_key, v15.taint_key), b_or_RN(is_null(v0.tolerations_effect), s_eq_NR(v0.tolerations_effect, v15.taint_effect))), b_or_NN(s_eq_NR(v0.tolerations_operator, "Exists"), s_eq_NN(v0.tolerations_value, v15.taint_value)))),true,var v16 = Ttmp80{.uid = v1.uid,.pod_name = v1.pod_name,.status = v1.status,.node_name = v1.node_name,.namespace = v1.namespace,.owner_name = v1.owner_name,.creation_timestamp = v1.creation_timestamp,.priority = v1.priority,.scheduler_name = v1.scheduler_name,.has_node_selector_labels = v1.has_node_selector_labels,.has_pod_affinity_requirements = v1.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v1.has_pod_anti_affinity_requirements,.has_node_port_requirements = v1.has_node_port_requirements,.has_topology_spread_constraints = v1.has_topology_spread_constraints,.equivalence_class = v1.equivalence_class,.qos_class = v1.qos_class,.resourceversion = v1.resourceversion,.last_requeue = v1.last_requeue,.controllable__node_name = v1.controllable__node_name,.pod_uid = v1.pod_uid,.tolerations_key = v1.tolerations_key,.tolerations_value = v1.tolerations_value,.tolerations_effect = v1.tolerations_effect,.tolerations_operator = v1.tolerations_operator,.node_name0 = v15.node_name,.taint_key = v15.taint_key,.taint_value = v15.taint_value,.taint_effect = v15.taint_effect,.num_taints = v15.num_taints},var gb17 = v0.pod_uid,var gb18 = v15.node_name,var gb19 = v15.num_taints,var groupResult25 = (v, v0, v15).group_by((gb17, gb18, gb19)),var aggResult24 = agg187(groupResult25),var v23 = TRtmp81{.pod_uid = gb17,.node_name = gb18},aggResult24.col,var v26 = v23.
Rnodes_that_have_tolerations_preempt[v1] :- Rnode_taints[v],var v0 = TRtmp83{.node_name = v.node_name},var v1 = v0.
Rallowed_nodes_preempt[v1] :- Rspare_capacity_per_node[v],var v0 = TRtmp84{.name = v.name},var v1 = v0.
Roverinput190[v29] :- Rpods_to_assign_preempt[v15],Rpod_affinity_match_expressions[v16],(v15.uid == v16.pod_uid),true,var v17 = Ttmp85{.uid = v15.uid,.pod_name = v15.pod_name,.status = v15.status,.node_name = v15.node_name,.namespace = v15.namespace,.owner_name = v15.owner_name,.creation_timestamp = v15.creation_timestamp,.priority = v15.priority,.scheduler_name = v15.scheduler_name,.has_node_selector_labels = v15.has_node_selector_labels,.has_pod_affinity_requirements = v15.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v15.has_pod_anti_affinity_requirements,.has_node_port_requirements = v15.has_node_port_requirements,.has_topology_spread_constraints = v15.has_topology_spread_constraints,.equivalence_class = v15.equivalence_class,.qos_class = v15.qos_class,.resourceversion = v15.resourceversion,.last_requeue = v15.last_requeue,.controllable__node_name = v15.controllable__node_name,.pod_uid = v16.pod_uid,.label_selector = v16.label_selector,.affinity_match_expressions = v16.affinity_match_expressions,.topology_key = v16.topology_key},Rmatching_pods[v18],sql_array_contains(v16.affinity_match_expressions, v18.expr_id),true,var v19 = Ttmp86{.uid = v17.uid,.pod_name = v17.pod_name,.status = v17.status,.node_name = v17.node_name,.namespace = v17.namespace,.owner_name = v17.owner_name,.creation_timestamp = v17.creation_timestamp,.priority = v17.priority,.scheduler_name = v17.scheduler_name,.has_node_selector_labels = v17.has_node_selector_labels,.has_pod_affinity_requirements = v17.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v17.has_pod_anti_affinity_requirements,.has_node_port_requirements = v17.has_node_port_requirements,.has_topology_spread_constraints = v17.has_topology_spread_constraints,.equivalence_class = v17.equivalence_class,.qos_class = v17.qos_class,.resourceversion = v17.resourceversion,.last_requeue = v17.last_requeue,.controllable__node_name = v17.controllable__node_name,.pod_uid = v17.pod_uid,.label_selector = v17.label_selector,.affinity_match_expressions = v17.affinity_match_expressions,.topology_key = v17.topology_key,.expr_id = v18.expr_id,.label_operator = v18.label_operator,.pod_uid0 = v18.pod_uid},Rpods_to_assign_preempt[v20],((v18.pod_uid == v20.uid) and (v15.uid != v20.uid)),true,var v21 = Ttmp87{.uid = v19.uid,.pod_name = v19.pod_name,.status = v19.status,.node_name = v19.node_name,.namespace = v19.namespace,.owner_name = v19.owner_name,.creation_timestamp = v19.creation_timestamp,.priority = v19.priority,.scheduler_name = v19.scheduler_name,.has_node_selector_labels = v19.has_node_selector_labels,.has_pod_affinity_requirements = v19.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v19.has_pod_anti_affinity_requirements,.has_node_port_requirements = v19.has_node_port_requirements,.has_topology_spread_constraints = v19.has_topology_spread_constraints,.equivalence_class = v19.equivalence_class,.qos_class = v19.qos_class,.resourceversion = v19.resourceversion,.last_requeue = v19.last_requeue,.controllable__node_name = v19.controllable__node_name,.pod_uid = v19.pod_uid,.label_selector = v19.label_selector,.affinity_match_expressions = v19.affinity_match_expressions,.topology_key = v19.topology_key,.expr_id = v19.expr_id,.label_operator = v19.label_operator,.pod_uid0 = v19.pod_uid0,.uid0 = v20.uid,.pod_name0 = v20.pod_name,.status0 = v20.status,.node_name0 = v20.node_name,.namespace0 = v20.namespace,.owner_name0 = v20.owner_name,.creation_timestamp0 = v20.creation_timestamp,.priority0 = v20.priority,.scheduler_name0 = v20.scheduler_name,.has_node_selector_labels0 = v20.has_node_selector_labels,.has_pod_affinity_requirements0 = v20.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v20.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v20.has_node_port_requirements,.has_topology_spread_constraints0 = v20.has_topology_spread_constraints,.equivalence_class0 = v20.equivalence_class,.qos_class0 = v20.qos_class,.resourceversion0 = v20.resourceversion,.last_requeue0 = v20.last_requeue,.controllable__node_name0 = v20.controllable__node_name},(v15.has_pod_affinity_requirements == true),var gb22 = v15.uid,var gb23 = v18.pod_uid,var gb24 = v16.label_selector,var gb25 = v16.topology_key,var gb26 = v16.affinity_match_expressions,var gb27 = v20.node_name,var groupResult = (v15, v16, v18, v20).group_by((gb22, gb23, gb24, gb25, gb26, gb27)),var aggResult = agg192(groupResult),var v28 = TRtmp89{.gb11 = gb22,.gb12 = gb22,.pod_uid = gb22,.tmp = gb23,.tmp13 = gb27},aggResult.col,var v29 = v28.
Rover193[v39] :- Roverinput190[v30],var gb31 = v30.gb11,var groupResult38 = (v30).group_by((gb31)),var aggResult37 = agg195(groupResult38),var v36 = TRtmp92{.gb11 = gb31,.array_agg = aggResult37.array_agg},var v39 = v36.
Rover196[v49] :- Roverinput190[v40],var gb41 = v40.gb12,var groupResult48 = (v40).group_by((gb41)),var aggResult47 = agg198(groupResult48),var v46 = TRtmp95{.gb12 = gb41,.array_agg14 = aggResult47.array_agg14},var v49 = v46.
Rinter_pod_affinity_matches_pending_preempt[v56] :- Roverinput190[v50],Rover193[v51],(true and (v50.gb11 == v51.gb11)),var v52 = Ttmp97{.tmp = v50.tmp,.tmp13 = v50.tmp13,.gb11 = v50.gb11,.gb12 = v50.gb12,.pod_uid = v50.pod_uid,.array_agg = v51.array_agg},Rover196[v53],(true and (v52.gb12 == v53.gb12)),var v54 = Ttmp98{.tmp = v52.tmp,.tmp13 = v52.tmp13,.gb11 = v52.gb11,.gb12 = v52.gb12,.pod_uid = v52.pod_uid,.array_agg = v52.array_agg,.array_agg14 = v53.array_agg14},var v55 = TRtmp43{.pod_uid = v50.pod_uid,.pod_matches = v51.array_agg,.node_matches = v53.array_agg14},var v56 = v55.
Roverinput200[v29] :- Rpods_to_assign_preempt[v15],Rpod_affinity_match_expressions[v16],(v15.uid == v16.pod_uid),true,var v17 = Ttmp85{.uid = v15.uid,.pod_name = v15.pod_name,.status = v15.status,.node_name = v15.node_name,.namespace = v15.namespace,.owner_name = v15.owner_name,.creation_timestamp = v15.creation_timestamp,.priority = v15.priority,.scheduler_name = v15.scheduler_name,.has_node_selector_labels = v15.has_node_selector_labels,.has_pod_affinity_requirements = v15.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v15.has_pod_anti_affinity_requirements,.has_node_port_requirements = v15.has_node_port_requirements,.has_topology_spread_constraints = v15.has_topology_spread_constraints,.equivalence_class = v15.equivalence_class,.qos_class = v15.qos_class,.resourceversion = v15.resourceversion,.last_requeue = v15.last_requeue,.controllable__node_name = v15.controllable__node_name,.pod_uid = v16.pod_uid,.label_selector = v16.label_selector,.affinity_match_expressions = v16.affinity_match_expressions,.topology_key = v16.topology_key},Rmatching_pods[v18],sql_array_contains(v16.affinity_match_expressions, v18.expr_id),true,var v19 = Ttmp86{.uid = v17.uid,.pod_name = v17.pod_name,.status = v17.status,.node_name = v17.node_name,.namespace = v17.namespace,.owner_name = v17.owner_name,.creation_timestamp = v17.creation_timestamp,.priority = v17.priority,.scheduler_name = v17.scheduler_name,.has_node_selector_labels = v17.has_node_selector_labels,.has_pod_affinity_requirements = v17.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v17.has_pod_anti_affinity_requirements,.has_node_port_requirements = v17.has_node_port_requirements,.has_topology_spread_constraints = v17.has_topology_spread_constraints,.equivalence_class = v17.equivalence_class,.qos_class = v17.qos_class,.resourceversion = v17.resourceversion,.last_requeue = v17.last_requeue,.controllable__node_name = v17.controllable__node_name,.pod_uid = v17.pod_uid,.label_selector = v17.label_selector,.affinity_match_expressions = v17.affinity_match_expressions,.topology_key = v17.topology_key,.expr_id = v18.expr_id,.label_operator = v18.label_operator,.pod_uid0 = v18.pod_uid},Rassigned_pods_preempt[v20],((v18.pod_uid == v20.uid) and (v15.uid != v20.uid)),true,var v21 = Ttmp87{.uid = v19.uid,.pod_name = v19.pod_name,.status = v19.status,.node_name = v19.node_name,.namespace = v19.namespace,.owner_name = v19.owner_name,.creation_timestamp = v19.creation_timestamp,.priority = v19.priority,.scheduler_name = v19.scheduler_name,.has_node_selector_labels = v19.has_node_selector_labels,.has_pod_affinity_requirements = v19.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v19.has_pod_anti_affinity_requirements,.has_node_port_requirements = v19.has_node_port_requirements,.has_topology_spread_constraints = v19.has_topology_spread_constraints,.equivalence_class = v19.equivalence_class,.qos_class = v19.qos_class,.resourceversion = v19.resourceversion,.last_requeue = v19.last_requeue,.controllable__node_name = v19.controllable__node_name,.pod_uid = v19.pod_uid,.label_selector = v19.label_selector,.affinity_match_expressions = v19.affinity_match_expressions,.topology_key = v19.topology_key,.expr_id = v19.expr_id,.label_operator = v19.label_operator,.pod_uid0 = v19.pod_uid0,.uid0 = v20.uid,.pod_name0 = v20.pod_name,.status0 = v20.status,.node_name0 = v20.node_name,.namespace0 = v20.namespace,.owner_name0 = v20.owner_name,.creation_timestamp0 = v20.creation_timestamp,.priority0 = v20.priority,.scheduler_name0 = v20.scheduler_name,.has_node_selector_labels0 = v20.has_node_selector_labels,.has_pod_affinity_requirements0 = v20.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v20.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v20.has_node_port_requirements,.has_topology_spread_constraints0 = v20.has_topology_spread_constraints,.equivalence_class0 = v20.equivalence_class,.qos_class0 = v20.qos_class,.resourceversion0 = v20.resourceversion,.last_requeue0 = v20.last_requeue,.controllable__node_name0 = v20.controllable__node_name},(v15.has_pod_affinity_requirements == true),var gb22 = v15.uid,var gb23 = v18.pod_uid,var gb24 = v16.label_selector,var gb25 = v16.topology_key,var gb26 = v16.affinity_match_expressions,var gb27 = v20.node_name,var groupResult = (v15, v16, v18, v20).group_by((gb22, gb23, gb24, gb25, gb26, gb27)),var aggResult = agg202(groupResult),var v28 = TRtmp89{.gb11 = gb22,.gb12 = gb22,.pod_uid = gb22,.tmp = gb23,.tmp13 = gb27},aggResult.col,var v29 = v28.
Rover203[v39] :- Roverinput200[v30],var gb31 = v30.gb11,var groupResult38 = (v30).group_by((gb31)),var aggResult37 = agg205(groupResult38),var v36 = TRtmp92{.gb11 = gb31,.array_agg = aggResult37.array_agg},var v39 = v36.
Rover206[v49] :- Roverinput200[v40],var gb41 = v40.gb12,var groupResult48 = (v40).group_by((gb41)),var aggResult47 = agg208(groupResult48),var v46 = TRtmp95{.gb12 = gb41,.array_agg14 = aggResult47.array_agg14},var v49 = v46.
Rinter_pod_affinity_matches_scheduled_preempt[v56] :- Roverinput200[v50],Rover203[v51],(true and (v50.gb11 == v51.gb11)),var v52 = Ttmp97{.tmp = v50.tmp,.tmp13 = v50.tmp13,.gb11 = v50.gb11,.gb12 = v50.gb12,.pod_uid = v50.pod_uid,.array_agg = v51.array_agg},Rover206[v53],(true and (v52.gb12 == v53.gb12)),var v54 = Ttmp98{.tmp = v52.tmp,.tmp13 = v52.tmp13,.gb11 = v52.gb11,.gb12 = v52.gb12,.pod_uid = v52.pod_uid,.array_agg = v52.array_agg,.array_agg14 = v53.array_agg14},var v55 = TRtmp43{.pod_uid = v50.pod_uid,.pod_matches = v51.array_agg,.node_matches = v53.array_agg14},var v56 = v55.
Roverinput210[v29] :- Rpods_to_assign_preempt[v15],Rpod_anti_affinity_match_expressions[v16],(v15.uid == v16.pod_uid),true,var v17 = Ttmp111{.uid = v15.uid,.pod_name = v15.pod_name,.status = v15.status,.node_name = v15.node_name,.namespace = v15.namespace,.owner_name = v15.owner_name,.creation_timestamp = v15.creation_timestamp,.priority = v15.priority,.scheduler_name = v15.scheduler_name,.has_node_selector_labels = v15.has_node_selector_labels,.has_pod_affinity_requirements = v15.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v15.has_pod_anti_affinity_requirements,.has_node_port_requirements = v15.has_node_port_requirements,.has_topology_spread_constraints = v15.has_topology_spread_constraints,.equivalence_class = v15.equivalence_class,.qos_class = v15.qos_class,.resourceversion = v15.resourceversion,.last_requeue = v15.last_requeue,.controllable__node_name = v15.controllable__node_name,.pod_uid = v16.pod_uid,.label_selector = v16.label_selector,.anti_affinity_match_expressions = v16.anti_affinity_match_expressions,.topology_key = v16.topology_key},Rmatching_pods[v18],sql_array_contains(v16.anti_affinity_match_expressions, v18.expr_id),true,var v19 = Ttmp112{.uid = v17.uid,.pod_name = v17.pod_name,.status = v17.status,.node_name = v17.node_name,.namespace = v17.namespace,.owner_name = v17.owner_name,.creation_timestamp = v17.creation_timestamp,.priority = v17.priority,.scheduler_name = v17.scheduler_name,.has_node_selector_labels = v17.has_node_selector_labels,.has_pod_affinity_requirements = v17.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v17.has_pod_anti_affinity_requirements,.has_node_port_requirements = v17.has_node_port_requirements,.has_topology_spread_constraints = v17.has_topology_spread_constraints,.equivalence_class = v17.equivalence_class,.qos_class = v17.qos_class,.resourceversion = v17.resourceversion,.last_requeue = v17.last_requeue,.controllable__node_name = v17.controllable__node_name,.pod_uid = v17.pod_uid,.label_selector = v17.label_selector,.anti_affinity_match_expressions = v17.anti_affinity_match_expressions,.topology_key = v17.topology_key,.expr_id = v18.expr_id,.label_operator = v18.label_operator,.pod_uid0 = v18.pod_uid},Rpods_to_assign_preempt[v20],((v18.pod_uid == v20.uid) and (v15.uid != v20.uid)),true,var v21 = Ttmp113{.uid = v19.uid,.pod_name = v19.pod_name,.status = v19.status,.node_name = v19.node_name,.namespace = v19.namespace,.owner_name = v19.owner_name,.creation_timestamp = v19.creation_timestamp,.priority = v19.priority,.scheduler_name = v19.scheduler_name,.has_node_selector_labels = v19.has_node_selector_labels,.has_pod_affinity_requirements = v19.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v19.has_pod_anti_affinity_requirements,.has_node_port_requirements = v19.has_node_port_requirements,.has_topology_spread_constraints = v19.has_topology_spread_constraints,.equivalence_class = v19.equivalence_class,.qos_class = v19.qos_class,.resourceversion = v19.resourceversion,.last_requeue = v19.last_requeue,.controllable__node_name = v19.controllable__node_name,.pod_uid = v19.pod_uid,.label_selector = v19.label_selector,.anti_affinity_match_expressions = v19.anti_affinity_match_expressions,.topology_key = v19.topology_key,.expr_id = v19.expr_id,.label_operator = v19.label_operator,.pod_uid0 = v19.pod_uid0,.uid0 = v20.uid,.pod_name0 = v20.pod_name,.status0 = v20.status,.node_name0 = v20.node_name,.namespace0 = v20.namespace,.owner_name0 = v20.owner_name,.creation_timestamp0 = v20.creation_timestamp,.priority0 = v20.priority,.scheduler_name0 = v20.scheduler_name,.has_node_selector_labels0 = v20.has_node_selector_labels,.has_pod_affinity_requirements0 = v20.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v20.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v20.has_node_port_requirements,.has_topology_spread_constraints0 = v20.has_topology_spread_constraints,.equivalence_class0 = v20.equivalence_class,.qos_class0 = v20.qos_class,.resourceversion0 = v20.resourceversion,.last_requeue0 = v20.last_requeue,.controllable__node_name0 = v20.controllable__node_name},(v15.has_pod_anti_affinity_requirements == true),var gb22 = v15.uid,var gb23 = v18.pod_uid,var gb24 = v16.label_selector,var gb25 = v16.topology_key,var gb26 = v16.anti_affinity_match_expressions,var gb27 = v20.node_name,var groupResult = (v15, v16, v18, v20).group_by((gb22, gb23, gb24, gb25, gb26, gb27)),var aggResult = agg212(groupResult),var v28 = TRtmp89{.gb11 = gb22,.gb12 = gb22,.pod_uid = gb22,.tmp = gb23,.tmp13 = gb27},aggResult.col,var v29 = v28.
Rover213[v39] :- Roverinput210[v30],var gb31 = v30.gb11,var groupResult38 = (v30).group_by((gb31)),var aggResult37 = agg215(groupResult38),var v36 = TRtmp92{.gb11 = gb31,.array_agg = aggResult37.array_agg},var v39 = v36.
Rover216[v49] :- Roverinput210[v40],var gb41 = v40.gb12,var groupResult48 = (v40).group_by((gb41)),var aggResult47 = agg218(groupResult48),var v46 = TRtmp95{.gb12 = gb41,.array_agg14 = aggResult47.array_agg14},var v49 = v46.
Rinter_pod_anti_affinity_matches_pending_preempt[v56] :- Roverinput210[v50],Rover213[v51],(true and (v50.gb11 == v51.gb11)),var v52 = Ttmp97{.tmp = v50.tmp,.tmp13 = v50.tmp13,.gb11 = v50.gb11,.gb12 = v50.gb12,.pod_uid = v50.pod_uid,.array_agg = v51.array_agg},Rover216[v53],(true and (v52.gb12 == v53.gb12)),var v54 = Ttmp98{.tmp = v52.tmp,.tmp13 = v52.tmp13,.gb11 = v52.gb11,.gb12 = v52.gb12,.pod_uid = v52.pod_uid,.array_agg = v52.array_agg,.array_agg14 = v53.array_agg14},var v55 = TRtmp43{.pod_uid = v50.pod_uid,.pod_matches = v51.array_agg,.node_matches = v53.array_agg14},var v56 = v55.
Roverinput220[v29] :- Rpods_to_assign_preempt[v15],Rpod_anti_affinity_match_expressions[v16],(v15.uid == v16.pod_uid),true,var v17 = Ttmp111{.uid = v15.uid,.pod_name = v15.pod_name,.status = v15.status,.node_name = v15.node_name,.namespace = v15.namespace,.owner_name = v15.owner_name,.creation_timestamp = v15.creation_timestamp,.priority = v15.priority,.scheduler_name = v15.scheduler_name,.has_node_selector_labels = v15.has_node_selector_labels,.has_pod_affinity_requirements = v15.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v15.has_pod_anti_affinity_requirements,.has_node_port_requirements = v15.has_node_port_requirements,.has_topology_spread_constraints = v15.has_topology_spread_constraints,.equivalence_class = v15.equivalence_class,.qos_class = v15.qos_class,.resourceversion = v15.resourceversion,.last_requeue = v15.last_requeue,.controllable__node_name = v15.controllable__node_name,.pod_uid = v16.pod_uid,.label_selector = v16.label_selector,.anti_affinity_match_expressions = v16.anti_affinity_match_expressions,.topology_key = v16.topology_key},Rmatching_pods[v18],sql_array_contains(v16.anti_affinity_match_expressions, v18.expr_id),true,var v19 = Ttmp112{.uid = v17.uid,.pod_name = v17.pod_name,.status = v17.status,.node_name = v17.node_name,.namespace = v17.namespace,.owner_name = v17.owner_name,.creation_timestamp = v17.creation_timestamp,.priority = v17.priority,.scheduler_name = v17.scheduler_name,.has_node_selector_labels = v17.has_node_selector_labels,.has_pod_affinity_requirements = v17.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v17.has_pod_anti_affinity_requirements,.has_node_port_requirements = v17.has_node_port_requirements,.has_topology_spread_constraints = v17.has_topology_spread_constraints,.equivalence_class = v17.equivalence_class,.qos_class = v17.qos_class,.resourceversion = v17.resourceversion,.last_requeue = v17.last_requeue,.controllable__node_name = v17.controllable__node_name,.pod_uid = v17.pod_uid,.label_selector = v17.label_selector,.anti_affinity_match_expressions = v17.anti_affinity_match_expressions,.topology_key = v17.topology_key,.expr_id = v18.expr_id,.label_operator = v18.label_operator,.pod_uid0 = v18.pod_uid},Rassigned_pods_preempt[v20],((v18.pod_uid == v20.uid) and (v15.uid != v20.uid)),true,var v21 = Ttmp113{.uid = v19.uid,.pod_name = v19.pod_name,.status = v19.status,.node_name = v19.node_name,.namespace = v19.namespace,.owner_name = v19.owner_name,.creation_timestamp = v19.creation_timestamp,.priority = v19.priority,.scheduler_name = v19.scheduler_name,.has_node_selector_labels = v19.has_node_selector_labels,.has_pod_affinity_requirements = v19.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements = v19.has_pod_anti_affinity_requirements,.has_node_port_requirements = v19.has_node_port_requirements,.has_topology_spread_constraints = v19.has_topology_spread_constraints,.equivalence_class = v19.equivalence_class,.qos_class = v19.qos_class,.resourceversion = v19.resourceversion,.last_requeue = v19.last_requeue,.controllable__node_name = v19.controllable__node_name,.pod_uid = v19.pod_uid,.label_selector = v19.label_selector,.anti_affinity_match_expressions = v19.anti_affinity_match_expressions,.topology_key = v19.topology_key,.expr_id = v19.expr_id,.label_operator = v19.label_operator,.pod_uid0 = v19.pod_uid0,.uid0 = v20.uid,.pod_name0 = v20.pod_name,.status0 = v20.status,.node_name0 = v20.node_name,.namespace0 = v20.namespace,.owner_name0 = v20.owner_name,.creation_timestamp0 = v20.creation_timestamp,.priority0 = v20.priority,.scheduler_name0 = v20.scheduler_name,.has_node_selector_labels0 = v20.has_node_selector_labels,.has_pod_affinity_requirements0 = v20.has_pod_affinity_requirements,.has_pod_anti_affinity_requirements0 = v20.has_pod_anti_affinity_requirements,.has_node_port_requirements0 = v20.has_node_port_requirements,.has_topology_spread_constraints0 = v20.has_topology_spread_constraints,.equivalence_class0 = v20.equivalence_class,.qos_class0 = v20.qos_class,.resourceversion0 = v20.resourceversion,.last_requeue0 = v20.last_requeue,.controllable__node_name0 = v20.controllable__node_name},(v15.has_pod_anti_affinity_requirements == true),var gb22 = v15.uid,var gb23 = v18.pod_uid,var gb24 = v16.label_selector,var gb25 = v16.topology_key,var gb26 = v16.anti_affinity_match_expressions,var gb27 = v20.node_name,var groupResult = (v15, v16, v18, v20).group_by((gb22, gb23, gb24, gb25, gb26, gb27)),var aggResult = agg222(groupResult),var v28 = TRtmp89{.gb11 = gb22,.gb12 = gb22,.pod_uid = gb22,.tmp = gb23,.tmp13 = gb27},aggResult.col,var v29 = v28.
Rover223[v39] :- Roverinput220[v30],var gb31 = v30.gb11,var groupResult38 = (v30).group_by((gb31)),var aggResult37 = agg225(groupResult38),var v36 = TRtmp92{.gb11 = gb31,.array_agg = aggResult37.array_agg},var v39 = v36.
Rover226[v49] :- Roverinput220[v40],var gb41 = v40.gb12,var groupResult48 = (v40).group_by((gb41)),var aggResult47 = agg228(groupResult48),var v46 = TRtmp95{.gb12 = gb41,.array_agg14 = aggResult47.array_agg14},var v49 = v46.
Rinter_pod_anti_affinity_matches_scheduled_preempt[v56] :- Roverinput220[v50],Rover223[v51],(true and (v50.gb11 == v51.gb11)),var v52 = Ttmp97{.tmp = v50.tmp,.tmp13 = v50.tmp13,.gb11 = v50.gb11,.gb12 = v50.gb12,.pod_uid = v50.pod_uid,.array_agg = v51.array_agg},Rover226[v53],(true and (v52.gb12 == v53.gb12)),var v54 = Ttmp98{.tmp = v52.tmp,.tmp13 = v52.tmp13,.gb11 = v52.gb11,.gb12 = v52.gb12,.pod_uid = v52.pod_uid,.array_agg = v52.array_agg,.array_agg14 = v53.array_agg14},var v55 = TRtmp43{.pod_uid = v50.pod_uid,.pod_matches = v51.array_agg,.node_matches = v53.array_agg14},var v56 = v55.
Rpods_to_assign_no_limit_count_preempt[v2] :- Rpods_to_assign_no_limit[v],var groupResult = (v).group_by(()),var aggResult = agg231(groupResult),var v1 = aggResult,var v2 = v1.
Rtmp233[v1] :- Rspare_capacity_per_node[v],(v.resource == "cpu"),var v0 = TRtmp84{.name = v.name},var v1 = v0.
Rtmp235[v4] :- Rspare_capacity_per_node[v2],(v2.resource == "memory"),var v3 = TRtmp84{.name = v2.name},var v4 = v3.
Runion236[v5] :- Rtmp233[v1],var v5 = v1.
Runion236[v5] :- Rtmp235[v4],var v5 = v4.
Rtmp238[v8] :- Rspare_capacity_per_node[v6],(v6.resource == "pods"),var v7 = TRtmp84{.name = v6.name},var v8 = v7.
Runion239[v9] :- Runion236[v5],var v9 = v5.
Runion239[v9] :- Rtmp238[v8],var v9 = v8.
Rtmp241[v12] :- Rspare_capacity_per_node[v10],(v10.resource == "ephemeral-storage"),var v11 = TRtmp84{.name = v10.name},var v12 = v11.
Runion242[v13] :- Runion239[v9],var v13 = v9.
Runion242[v13] :- Rtmp241[v12],var v13 = v12.
Rtmp243[v14] :- Runion242[v13],var v14 = v13.
Rspare_capacity_per_node_sorted[v15] :- Rtmp243[v14],var v15 = v14.
Rtmp246[v3] :- Rspare_capacity_per_node[v],Rinter_pod_affinity_matches_scheduled[v0],sql_array_contains_N(v0.node_matches, v.name),true,var v1 = Ttmp244{.name = v.name,.resource = v.resource,.capacity = v.capacity,.pod_uid = v0.pod_uid,.pod_matches = v0.pod_matches,.node_matches = v0.node_matches},var v2 = TRtmp69{.name = v.name,.resource = v.resource,.capacity = v.capacity},var v3 = v2.
Rtmp249[v8] :- Rspare_capacity_per_node[v4],Rpod_node_selector_matches[v5],sql_array_contains(v5.node_matches, v4.name),true,var v6 = Ttmp247{.name = v4.name,.resource = v4.resource,.capacity = v4.capacity,.pod_uid = v5.pod_uid,.node_matches = v5.node_matches},var v7 = TRtmp69{.name = v4.name,.resource = v4.resource,.capacity = v4.capacity},var v8 = v7.
Runion250[v9] :- Rtmp246[v3],var v9 = v3.
Runion250[v9] :- Rtmp249[v8],var v9 = v8.
Rtmp253[v14] :- Rspare_capacity_per_node[v10],Rspare_capacity_per_node_sorted[TRtmp84{v10.name}],
var v11 = TRtmp84{.name = v10.name},
true,var v12 = Ttmp251{.name = v10.name,.resource = v10.resource,.capacity = v10.capacity,.name0 = v11.name},var v13 = TRtmp69{.name = v10.name,.resource = v10.resource,.capacity = v10.capacity},var v14 = v13.
Runion254[v15] :- Runion250[v9],var v15 = v9.
Runion254[v15] :- Rtmp253[v14],var v15 = v14.
Rtmp255[v16] :- Runion254[v15],var v16 = v15.
Rspare_capacity_per_node_augment[v17] :- Rtmp255[v16],var v17 = v16.
index Ipod_info_by_uid(uid:string) on Rpod_info[Tpod_info{uid,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}]
index Ipod_info_idx(status:string,node_name:Option<string>) on Rpod_info[Tpod_info{_,_,status,node_name,_,_,_,_,_,_,_,_,_,_,_,_,_,_}]
index Ipod_resource_demands_by_uid(uid:string) on Rpod_resource_demands[Tpod_resource_demands{uid,_,_}]
index Imatch_expressions_idx(label_key:string,label_operator:string,label_values:Vec<string>) on Rmatch_expressions[Tmatch_expressions{_,label_key,label_operator,label_values}]
index Ipod_topology_spread_constraints_idx(uid:string) on Rpod_topology_spread_constraints[Tpod_topology_spread_constraints{uid,_,_,_,_}]
index Ipod_ports_request_by_uid(pod_uid:string) on Rpod_ports_request[Tpod_ports_request{pod_uid,_,_,_}]
index Ipod_node_selector_labels_by_uid(pod_uid:string) on Rpod_node_selector_labels[Tpod_node_selector_labels{pod_uid,_,_}]
index Ipod_affinity_match_expressions_labels_by_uid(pod_uid:string) on Rpod_affinity_match_expressions[Tpod_affinity_match_expressions{pod_uid,_,_,_}]
index Ipod_anti_affinity_match_expressions_labels_by_uid(pod_uid:string) on Rpod_anti_affinity_match_expressions[Tpod_anti_affinity_match_expressions{pod_uid,_,_,_}]
index Ipod_labels_by_uid(pod_uid:string) on Rpod_labels[Tpod_labels{pod_uid,_,_}]
index Ipod_labels_idx(label_key:string,label_value:string) on Rpod_labels[Tpod_labels{_,label_key,label_value}]
index Inode_labels_by_name(node_name:string) on Rnode_labels[Tnode_labels{node_name,_,_}]
index Inode_labels_idx(label_key:string,label_value:string) on Rnode_labels[Tnode_labels{_,label_key,label_value}]
index Inode_taints_by_name(node_name:string) on Rnode_taints[Tnode_taints{node_name,_,_,_}]
index Ipod_tolerations_by_uid(pod_uid:string) on Rpod_tolerations[Tpod_tolerations{pod_uid,_,_,_,_}]
index Ipod_images_by_uid(pod_uid:string) on Rpod_images[Tpod_images{pod_uid,_}]
